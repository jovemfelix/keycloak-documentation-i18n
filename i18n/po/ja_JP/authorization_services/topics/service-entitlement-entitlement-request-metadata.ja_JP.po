# Japanese translations for keycloak-documentation-i18n package
# Copyright (C) 2017 Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# Automatically generated, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n  \n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Title =
#: source/authorization_services/topics/service-entitlement-entitlement-request-metadata.adoc:2
#, no-wrap
msgid "Entitlement Request Metadata"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/service-entitlement-entitlement-request-metadata.adoc:6
msgid ""
"When requesting entitlements client applications are allowed to associate "
"metadata information to the request and define how they expect to obtain the "
"permissions."
msgstr ""

#. type: Code block
#: source/authorization_services/topics/service-entitlement-entitlement-request-metadata.adoc:16
#: source/authorization_services/topics/service-entitlement-entitlement-request-metadata.adoc:35
#, no-wrap
msgid ""
"curl -X POST -H \"Authorization: Bearer ${access_token}\" -d '{\n"
"    \"metadata\" : {\n"
"        \"include_resource_name\" : false\n"
"    },\n"
"    \"permissions\" : [\n"
"        ...\n"
"    ]\n"
"}' \"http://${host}:${port}/auth/realms/${realm_name}/authz/entitlement/{client_id}\"\n"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/service-entitlement-entitlement-request-metadata.adoc:20
msgid ""
"The Entitlement API endpoint only allows passing metadata along an "
"entitlement request when using HTTP POST."
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/service-entitlement-entitlement-request-metadata.adoc:22
msgid ""
"The following sections will explain how and when you can use the different "
"information you can include in an entitlement request as a metadata."
msgstr ""

#. type: Title =
#: source/authorization_services/topics/service-entitlement-entitlement-request-metadata.adoc:23
#, no-wrap
msgid "Decide whether or not resource's name should be included the response"
msgstr ""

#. type: Block title
#: source/authorization_services/topics/service-entitlement-entitlement-request-metadata.adoc:25
#, no-wrap
msgid "include_resource_name"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/service-entitlement-entitlement-request-metadata.adoc:38
msgid ""
"Clients can use ```include_resource_name``` to decide whether or not "
"resource`s name should be included on each permission granted by the server. "
"This option can be used to reduce the size of RPTs and optimize client-"
"server communication."
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/service-entitlement-entitlement-request-metadata.adoc:41
msgid ""
"By default, permissions in a RPT contain both the id and name of the "
"resource that was granted by every single permission. This option is "
"specially useful when the resource server is capable of map their resources "
"only based on the resource`s id."
msgstr ""

#. type: Title =
#: source/authorization_services/topics/service-entitlement-entitlement-request-metadata.adoc:42
#, no-wrap
msgid "Limiting the number of permissions within a RPT"
msgstr ""

#. type: Block title
#: source/authorization_services/topics/service-entitlement-entitlement-request-metadata.adoc:44
#, no-wrap
msgid "limit"
msgstr ""

#. type: Code block
#: source/authorization_services/topics/service-entitlement-entitlement-request-metadata.adoc:54
#, no-wrap
msgid ""
"curl -X POST -H \"Authorization: Bearer ${access_token}\" -d '{\n"
"    \"metadata\" : {\n"
"        \"limit\" : 10\n"
"    },\n"
"    \"permissions\" : [\n"
"        ...\n"
"    ]\n"
"}' \"http://${host}:${port}/auth/realms/${realm_name}/authz/entitlement/{client_id}\"\n"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/service-entitlement-entitlement-request-metadata.adoc:56
msgid ""
"Clients can use ```limit``` to specify how many permissions they expected "
"within a RPT returned by the server. The limit option works as follows:"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/service-entitlement-entitlement-request-metadata.adoc:58
msgid ""
"If a request is sent *without* a previously issued RPT, only ```limit``` "
"permissions will be returned based on the resources/scopes from the "
"```permissions``` claim."
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/service-entitlement-entitlement-request-metadata.adoc:61
msgid ""
"If a request is sent *with* a previously issued RPT, the permissions "
"associated with the resources/scopes from the ```permissions``` claim take "
"precedence where the permissions from the previously issued RPT are only "
"included if ```limit``` is not reached. In case there is enough room for "
"permissions from a previously issued RPT, the server will include the first "
"permissions defined there."
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/service-entitlement-entitlement-request-metadata.adoc:63
msgid ""
"This option allows clients to control the size of RPTs and keep only last "
"permissions granted by the server. It usually makes sense only in cases your "
"client is capable of sending previously issued RPTs while asking for new "
"permissions (a.k.a.: incremental authorization)."
msgstr ""
