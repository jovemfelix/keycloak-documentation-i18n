# Japanese translations for keycloak-documentation-i18n package
# Copyright (C) 2017 Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# Automatically generated, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n  \n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Title =====
#, fuzzy, no-wrap
msgid "Obtaining Entitlements"
msgstr "アサーション属性の取得"

#. type: Title ====
#, no-wrap
msgid "Requesting Entitlements"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Client applications can use a specific endpoint to obtain a special security token called a <<_service_rpt_overview, Requesting Party Token (RPT)>>.\n"
"This token consists of all the entitlements (or permissions) for a user as a result of the evaluation of the permissions and authorization policies associated with the resources being requested.\n"
"With an RPT, client applications can gain access to protected resources at the resource server.\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Entitlement API Endpoint"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"```bash\n"
"http://${host}:${port}/auth/realms/${realm_name}/authz/entitlement/{client_id}\n"
"```\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"The **client_id** parameter above must be provided in order to identify the client application acting as a <<_overview_terminology_resource_server, resource server>>\n"
"in {project_name}. You must provide the client identifier in order to restrict the scope of the evaluation to the resources, scopes and permissions\n"
"managed by a specific resource server.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "The Entitlement API comes in two flavors:\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Using HTTP **GET** in order to obtain all entitlements based on the resources owned by a specific user or/and general resources\n"
"owned and managed by the resource server itself.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "Using HTTP **POST** in order to obtain entitlements based on a a set of one or more resources and scopes sent along with an entitlement request.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Using one or another depends on your use case and how much resources you have registered in {project_name}. Although the **GET** variant\n"
"provides an easy way to obtain entitlements from the server, it might not be appropriate in case you have too much resources associated\n"
"with an user. In this case, the **POST** method is recommended.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Regardless of the HTTP method you decide to use, the Entitlement API endpoint expects an access token in the request representing a user's identity\n"
"and his consent to access authorization data on his behalf. The access token must be sent as a bearer token using a HTTP ```Authorization``` header.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"After successfully invoking the Entitlement API endpoint, you will get a <<_service_rpt_overview, RPT>> with all permissions\n"
"granted by the server.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "The easiest way to obtain entitlements for a specific user is using an HTTP GET request. For example, using curl:\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"```bash\n"
"curl -X GET \\\n"
"    -H \"Authorization: Bearer ${access_token}\" \\\n"
"    \"http://${host}:${port}/auth/realms/${realm_name}/authz/entitlement/{client_id}\"\n"
"```\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "As a result, the server response is:\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"```json\n"
"{\n"
"  \"rpt\": ${RPT}\n"
"}\n"
"```\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Using this method to obtain entitlements, the server responds to the requesting client with *all* entitlements for a user, based on the evaluation of the permissions and\n"
"authorization policies associated with the resources owned by the user or the resource server itself. For instance, suppose you have permissions defined in {project_name} for the following resources:\n"
msgstr ""

#. type: Plain text
#, fuzzy, no-wrap
#| msgid "Login Page"
msgid "Main Page\n"
msgstr "ログインページ"

#. type: Plain text
#, no-wrap
msgid "Alice Bank Account\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "Bob Bank Account\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"*Main Page* is a common resource in your application and owned by the resource server itself, it represents a landing or main page in your application. On the\n"
"other hand, *Alice Bank Account* is a resource where user *alice* is the owner. The same goes for *Bob Bank Account* which is owned by a different user, *bob*.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"When obtaining entitlements for user *alice*, the server is going to evaluate all permissions associated with resources *Main Page* and *Alice Bank Account*. Giving you\n"
"back a RPT (if permissions were actually granted) with a set of permissions representing these resources.\n"
msgstr ""

#. type: Title =====
#, no-wrap
msgid "Obtaining Entitlements for a Specific Set of Resources"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "You can also use the entitlements endpoint to obtain a user's entitlements for a set of one or more resources. For example, using curl:\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"```bash\n"
"curl -X POST -H \"Content-Type: application/json\" -H \"Authorization: Bearer ${access_token}\" -d '{\n"
"    \"permissions\" : [\n"
"        {\n"
"            \"resource_set_name\" : \"Alice Bank Account\"\n"
"        }\n"
"    ]\n"
"}' \"http://${host}:${port}/auth/realms/${realm_name}/authz/entitlement/{client_id}\"\n"
"```\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Unlike the GET version, the server responds with an RPT holding the permissions granted during the evaluation of the permissions and authorization policies\n"
"associated with the resources being requested.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "You can also specify the scopes you want to access. For example, using curl:\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"```bash\n"
"curl -X POST -H \"Authorization: Bearer ${access_token}\" -d '{\n"
"    \"permissions\" : [\n"
"        {\n"
"            \"resource_set_name\" : \"Alice Bank Account\",\n"
"            \"scopes\" : [\n"
"                \"withdraw\"\n"
"            ]\n"
"        }\n"
"    ]\n"
"}' \"http://${host}:${port}/auth/realms/${realm_name}/authz/entitlement/{client_id}\"\n"
"```\n"
msgstr ""
