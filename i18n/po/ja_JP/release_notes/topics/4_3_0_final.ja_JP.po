# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Hiroyuki Wada <wadahiro@gmail.com>, 2019
# Kohei Tamura <ktamura.biz.80@gmail.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n\n"
"Last-Translator: Kohei Tamura <ktamura.biz.80@gmail.com>, 2019\n"
"Language-Team: Japanese (Japan) (https://www.transifex.com/openstandia/teams/79437/ja_JP/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja_JP\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Title =
#, no-wrap
msgid "X509 Client Authenticator"
msgstr "X509 Client Authenticator"

#. type: Title =
#, no-wrap
msgid "Hostname SPI"
msgstr "Hostname SPI"

#. type: Plain text
msgid ""
"The hostname SPI introduces a more flexible way to configure the hostname "
"for {project_name}. There are two built-in providers. The first is request, "
"which uses the request headers to determine the hostname. The second is "
"fixed, which allows configuring a fixed hostname. The latter makes sure that"
" only valid hostnames can be used and also allows internal applications to "
"invoke {project_name} through an alternative URL."
msgstr ""
"Hostname "
"SPIは、{project_name}のホスト名を設定するためのより柔軟な方法を導入します。2つの組み込みプロバイダがあります。1つ目はrequestで、リクエストヘッダーを使ってホスト名を決定します。2番目はfixedで、固定ホスト名を設定できます。後者は、有効なホスト名のみが使用可能であることを確認し、また内部アプリケーションが代替URLを通じて{project_name}を呼び出すことを可能にします。"

#. type: Plain text
msgid ""
"For more details refer to the threat mitigation section in the "
"link:{adminguide_link}[{adminguide_name}]."
msgstr ""
"詳細については、 link:{adminguide_link}[{adminguide_name}] の脅威軽減のセクションを参照してください。"

#. type: Plain text
msgid ""
"The newly added Client Authenticator uses X509 Client Certificates and "
"Mutual TLS to secure a connection from the client. In addition to that the "
"Keycloak Server validates Subject DN field of the client's certificate."
msgstr ""
"新しく追加されたClient Authenticatorは、X509クライアント証明書とMutual "
"TLSを使用してクライアントからの接続を保護します。それに加えて、Keycloakサーバーはクライアント証明書のSubject "
"DNフィールドを検証します。"

#. type: Title =
#, no-wrap
msgid "Performance improvements to Authorization Services"
msgstr "認可サービスのパフォーマンス向上"

#. type: Plain text
msgid ""
"For this release, we improved policy evaluation performance across the "
"board, increasing reliability and throughput. The main changes we did were "
"related with trying to optimize the policy evaluation path by avoiding "
"unnecessary flows and collect decisions as soon as they happen. We also "
"introduced a policy decision cache on a per request basis, avoiding "
"redundant decisions from policies previously evaluated."
msgstr ""
"今回のリリースでは、全面的にポリシー評価のパフォーマンスが向上し、信頼性とスループットが向上しました。私たちが行った主な変更は、不要なフローを回避してポリシー評価パスを最適化し、発生したらすぐに決定情報を収集することでした。また、要求ごとにポリシー決定キャッシュを導入し、以前に評価されたポリシーによる重複した決定を避けるようにしました。"

#. type: Plain text
msgid ""
"We are also working on other layers of cache which should give a much better"
" experience. See "
"https://issues.jboss.org/browse/KEYCLOAK-7952[KEYCLOAK-7952]."
msgstr ""
"私たちは、より良いエクスペリエンスを与える他のキャッシュ・レイヤーにも取り組んでいます。 "
"https://issues.jboss.org/browse/KEYCLOAK-7952[KEYCLOAK-7952] を参照してください。"

#. type: Title =
#, no-wrap
msgid "Choosing the response mode when obtaining permissions from the server"
msgstr "サーバーからパーミッションを取得する際のレスポンスモードの選択"

#. type: Plain text
msgid ""
"In previous versions, permissions were always returned from the server using"
" standard OAuth2 response, containing the access and refresh tokens. In this"
" release, clients can use a `response_mode` parameter to specify how the "
"server should respond to an authorization request. This parameter accepts "
"two values:"
msgstr ""
"以前のバージョンでは、アクセストークンとリフレッシュトークンを含む標準のOAuth2レスポンスを使用して、パーミッションは常にサーバーから返されていました。このリリースでは、クライアントは"
" `response_mode` "
"パラメーターを使用してサーバーが認可リクエストにどのように応答するべきかを指定することができます。このパラメーターは次の2つの値を受け入れます。"

#. type: Plain text
msgid "`decision`"
msgstr "`decision`"

#. type: Plain text
msgid ""
"Indicating that responses should only contain a flag indicating whether or "
"not permissions were granted by the server. Otherwise a `403` HTTP status "
"code is returned."
msgstr ""
"レスポンスには、サーバーによってパーミッションが付与されたかどうかを示すフラグのみを含めるように指示します。そうでなければ、 `403` "
"HTTPステータスコードが返されます。"

#. type: Plain text
msgid "`permissions`"
msgstr "`permissions`"

#. type: Plain text
msgid ""
"Indicating that a response should contain every single permission granted by"
" the server using a JSON format."
msgstr "JSON形式を使用して、レスポンスにサーバーから付与されたすべてのパーミッションが含まれるように指示します。"

#. type: Title =
#, no-wrap
msgid "NodeJS Policy Enforcer"
msgstr "NodeJSポリシー・エンフォーサー"

#. type: Plain text
msgid ""
"The https://github.com/keycloak/keycloak-nodejs-connect[keycloak-nodejs-"
"connect], an adapter for NodeJS, now supports constructs to protect "
"resources based on decisions taken from the server. The new construct allows"
" users to protect their resources using fine-grained permissions as follows:"
msgstr ""
"NodeJS用のアダプターである https://github.com/keycloak/keycloak-nodejs-connect"
"[keycloak-nodejs-"
"connect]は、サーバーからの決定に基づいてリソースを保護するための構築をサポートするようになりました。新しい構文により、ユーザーは次のようにきめ細かいパーミッションを使用して自分のリソースを保護できます。"

#. type: Code block
#, no-wrap
msgid ""
"app.get('/protected/resource', keycloak.enforcer('resource:view'), function (req, res) {\n"
"  res.json({message: 'access granted'});\n"
"});\n"
msgstr ""
"app.get('/protected/resource', keycloak.enforcer('resource:view'), function (req, res) {\n"
"  res.json({message: 'access granted'});\n"
"});\n"

#. type: Title =
#, no-wrap
msgid "Support hosted domain for Google logins"
msgstr "Googleログイン用のホストドメインのサポート"

#. type: Plain text
msgid ""
"Login with Google now supports the `hd` parameter to restrict Google logins "
"to a specific hosted domain at Google. When this is specified in the "
"identity provider any login from a different domain is rejected."
msgstr ""
"Googleでのログインは、GoogleログインをGoogleの特定のホストドメインに制限するための `hd` "
"パラメーターをサポートします。これがアイデンティティー・プロバイダーで指定されている場合は、異なるドメインからのログインは拒否されます。"

#. type: Plain text
msgid ""
"Thanks to https://github.com/brushmate[brushmate] for the contribution."
msgstr "https://github.com/brushmate[brushmate]のコントリビューションに感謝します。"

#. type: Title =
#, no-wrap
msgid "Escape unsafe tags in HTML output"
msgstr "HTML出力における危険なタグのエスケープ"

#. type: Plain text
msgid ""
"Most HTML output is already escaped for HTML tags, but there are some places"
" where HTML tags are permitted.  These are only where admin access is needed"
" to update the value. Even though it would require admin access to update "
"such fields we have added an extra layer of defence and are now escaping "
"unsafe elements like `<script>`."
msgstr ""
"ほとんどのHTML出力はHTMLタグに対してすでにエスケープされていますが、HTMLタグが許可されている場所がいくつかあります。これらは、値を更新するためには管理者アクセスが必要な箇所に限られています。そのようなフィールドを更新するには管理者アクセスが必要になりますが、追加の防御層が追加され、現在では"
" `<script>` のような危険な要素をエスケープしています。"
