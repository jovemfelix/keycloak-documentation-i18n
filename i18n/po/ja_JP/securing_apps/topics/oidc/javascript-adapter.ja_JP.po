# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Hiroyuki Wada <wadahiro@gmail.com>, 2021
# Kohei Tamura <ktamura.biz.80@gmail.com>, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n\n"
"Last-Translator: Kohei Tamura <ktamura.biz.80@gmail.com>, 2022\n"
"Language-Team: Japanese (Japan) (https://www.transifex.com/openstandia/teams/79437/ja_JP/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja_JP\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Plain text
msgid "For example:"
msgstr "例："

#. type: Title ===
#, no-wrap
msgid "JavaScript Adapter"
msgstr "JavaScriptアダプター"

#. type: Plain text
msgid ""
"{project_name} comes with a client-side JavaScript library that can be used "
"to secure HTML5/JavaScript applications. The JavaScript adapter has built-in"
" support for Cordova applications."
msgstr ""
"{project_name}には、HTML5/JavaScriptアプリケーションをセキュリティー保護するために使用可能なクライアント・サイドのJavaScriptライブラリーが付属しています。JavaScriptアダプターには、Cordovaアプリケーションのサポートが組み込まれています。"

#. type: Plain text
msgid ""
"The library can be retrieved directly from the {project_name} server at "
"`/auth/js/keycloak.js` and is also distributed as a ZIP archive."
msgstr ""
"ライブラリーは{project_name}サーバーの `/auth/js/keycloak.js` "
"から直接取得することができ、ZIPアーカイブとしても配布されています。"

#. type: Plain text
msgid ""
"A best practice is to load the JavaScript adapter directly from "
"{project_name} Server as it will automatically be updated when you upgrade "
"the server. If you copy the adapter to your web application instead, make "
"sure you upgrade the adapter only after you have upgraded the server."
msgstr ""
"{project_name}サーバーをアップグレードする際に自動的にJavaScriptアダプターが更新されるため、ベスト・プラクティスは{project_name}サーバーからJavaScriptアダプターを直接ロードすることです。そうではなくアダプターをWebアプリケーションにコピーする場合は、サーバーをアップグレードした後に、アダプターもアップグレードするようにしてください。"

#. type: Plain text
msgid ""
"You can also download package from npm: "
"https://www.npmjs.com/package/keycloak-js"
msgstr "npmからパッケージをダウンロードすることもできます。https://www.npmjs.com/package/keycloak-js"

#. type: Plain text
msgid ""
"One important thing to note about using client-side applications is that the"
" client has to be a public client as there is no secure way to store client "
"credentials in a client-side application. This makes it very important to "
"make sure the redirect URIs you have configured for the client are correct "
"and as specific as possible."
msgstr ""
"クライアント・サイドのアプリケーションを使用する際に注意すべき重要な点の1つは、クライアント・サイドのアプリケーションにクライアント・クレデンシャルを安全に保存する方法がないため、クライアントをパブリック・クライアントにする必要があることです。これにより、クライアント用に設定したリダイレクトURIが正しいか、できるだけ具体的であるかを確認することが非常に重要になります。"

#. type: Plain text
msgid ""
"To use the JavaScript adapter you must first create a client for your "
"application in the {project_name} Administration Console. Make sure `public`"
" is selected for `Access Type`."
msgstr ""
"JavaScriptアダプターを使用するには、まず{project_name}管理コンソールでアプリケーション用のクライアントを作成する必要があります。"
" `Access Type` に `public` が選択されていることを確認してください。"

#. type: Plain text
msgid ""
"You also need to configure `Valid Redirect URIs` and `Web Origins`. Be as "
"specific as possible as failing to do so may result in a security "
"vulnerability."
msgstr ""
"また、 `Valid Redirect URIs` と `Web Origins` "
"を設定する必要があります。できるだけ具体的にする理由は、そうしなければセキュリティー上の脆弱性が生じる可能性があるためです。"

#. type: Plain text
msgid ""
"Once the client is created click on the `Installation` tab select `Keycloak "
"OIDC JSON` for `Format Option` then click `Download`. The downloaded "
"`keycloak.json` file should be hosted on your web server at the same "
"location as your HTML pages."
msgstr ""
"クライアントが作成されたら `Installation` タブをクリックし、 `Format Option` の中から `Keycloak OIDC "
"JSON` を選択して、 `Download` をクリックします。ダウンロードした `keycloak.json` "
"ファイルは、HTMLページと同じ場所にあるWebサーバー上にホストされるべきです。"

#. type: Plain text
msgid ""
"Alternatively, you can skip the configuration file and manually configure "
"the adapter."
msgstr "または、設定ファイルではなく、アダプターを手動で設定することもできます。"

#. type: Plain text
msgid "The following example shows how to initialize the JavaScript adapter:"
msgstr "次の例は、JavaScriptアダプターを初期化する方法を示しています。"

#. type: delimited block -
#, no-wrap
msgid ""
"<html>\n"
"<head>\n"
"    <script src=\"keycloak.js\"></script>\n"
"    <script>\n"
"        function initKeycloak() {\n"
"            var keycloak = new Keycloak();\n"
"            keycloak.init().then(function(authenticated) {\n"
"                alert(authenticated ? 'authenticated' : 'not authenticated');\n"
"            }).catch(function() {\n"
"                alert('failed to initialize');\n"
"            });\n"
"        }\n"
"    </script>\n"
"</head>\n"
"<body onload=\"initKeycloak()\">\n"
"    <!-- your page content goes here -->\n"
"</body>\n"
"</html>\n"
msgstr ""
"<html>\n"
"<head>\n"
"    <script src=\"keycloak.js\"></script>\n"
"    <script>\n"
"        function initKeycloak() {\n"
"            var keycloak = new Keycloak();\n"
"            keycloak.init().then(function(authenticated) {\n"
"                alert(authenticated ? 'authenticated' : 'not authenticated');\n"
"            }).catch(function() {\n"
"                alert('failed to initialize');\n"
"            });\n"
"        }\n"
"    </script>\n"
"</head>\n"
"<body onload=\"initKeycloak()\">\n"
"    <!-- your page content goes here -->\n"
"</body>\n"
"</html>\n"

#. type: Plain text
msgid ""
"If the `keycloak.json` file is in a different location you can specify it:"
msgstr "`keycloak.json` ファイルが別の場所にある場合、以下のように指定することができます。"

#. type: delimited block -
#, no-wrap
msgid ""
"var keycloak = new Keycloak('http://localhost:8080/myapp/keycloak.json');\n"
msgstr ""
"var keycloak = new Keycloak('http://localhost:8080/myapp/keycloak.json');\n"

#. type: Plain text
msgid ""
"Alternatively, you can pass in a JavaScript object with the required "
"configuration instead:"
msgstr "または、以下のように必要な設定でJavaScriptオブジェクトを渡すこともできます。"

#. type: delimited block -
#, no-wrap
msgid ""
"var keycloak = new Keycloak({\n"
"    url: 'http://keycloak-server/auth',\n"
"    realm: 'myrealm',\n"
"    clientId: 'myapp'\n"
"});\n"
msgstr ""
"var keycloak = new Keycloak({\n"
"    url: 'http://keycloak-server/auth',\n"
"    realm: 'myrealm',\n"
"    clientId: 'myapp'\n"
"});\n"

#. type: Plain text
msgid ""
"By default to authenticate you need to call the `login` function. However, "
"there are two options available to make the adapter automatically "
"authenticate. You can pass `login-required` or `check-sso` to the init "
"function. `login-required` will authenticate the client if the user is "
"logged-in to {project_name} or display the login page if not. `check-sso` "
"will only authenticate the client if the user is already logged-in, if the "
"user is not logged-in the browser will be redirected back to the application"
" and remain unauthenticated."
msgstr ""
"デフォルトでは `login` 関数を呼び出す必要があります。ただし、アダプターを自動的に認証させるための2つのオプションがあります。 `init` "
"関数に `login-required` または `check-sso` を渡すことができます。 `login-required` "
"は、ユーザーが{project_name}にログインしていない場合にクライアントを認証し、そうでない場合にログインページを表示します。 `check-"
"sso` "
"は、ユーザーがすでにログインしている場合にのみクライアントを認証します。ユーザーがログインしていない場合、ブラウザーはアプリケーションにリダイレクトされ、未認証のままになります。"

#. type: Plain text
msgid ""
"You can configure a _silent_ `check-sso` option.  With this feature enabled,"
" your browser won't do a full redirect to the {project_name} server and back"
" to your application, but this action will be performed in a hidden iframe, "
"so your application resources only need to be loaded and parsed once by the "
"browser when the app is initialized and not again after the redirect back "
"from {project_name} to your app.  This is particularly useful in case of "
"SPAs (Single Page Applications)."
msgstr ""
"_silent_ `check-sso` "
"オプションを設定できます。この機能を有効にすると、ブラウザーは{project_name}サーバーへの完全なリダイレクトを行わず、アプリケーションに戻ります。このアクションは非表示のiframeで実行されるため、アプリケーションのリソースはアプリの初期化時にブラウザーによって1回だけロードと解析がされ、{project_name}からアプリへのリダイレクト・バック後に再度行われはしません。これは、SPA（シングル・ページ・アプリケーション）の場合に特に便利です。"

#. type: Plain text
msgid ""
"To enable the _silent_ `check-sso`, you have to provide a "
"`silentCheckSsoRedirectUri` attribute in the init method.  This URI needs to"
" be a valid endpoint in the application (and of course it must be configured"
" as a valid redirect for the client in the {project_name} Administration "
"Console):"
msgstr ""
"_silent_ `check-sso` を有効にするには、initメソッドで `silentCheckSsoRedirectUri` "
"属性を提供する必要があります。このURIは、アプリケーションの有効なエンドポイントである必要があります（もちろん、{project_name}管理コンソールでクライアントの有効なリダイレクトとして設定する必要があります）。"

#. type: delimited block -
#, no-wrap
msgid ""
"keycloak.init({\n"
"    onLoad: 'check-sso',\n"
"    silentCheckSsoRedirectUri: window.location.origin + '/silent-check-sso.html'\n"
"})\n"
msgstr ""
"keycloak.init({\n"
"    onLoad: 'check-sso',\n"
"    silentCheckSsoRedirectUri: window.location.origin + '/silent-check-sso.html'\n"
"})\n"

#. type: Plain text
msgid ""
"The page at the silent check-sso redirect uri is loaded in the iframe after "
"successfully checking your authentication state and retrieving the tokens "
"from the {project_name} server.  It has no other task than sending the "
"received tokens to the main application and should only look like this:"
msgstr ""
"サイレント・チェックSSOリダイレクトURIのページは、認証状態を正常にチェックし、{project_name}サーバーからトークンを取得した後、iframeにロードされます。受信したトークンをメイン・アプリケーションに送信する以外のタスクはなく、次のように見えるはずです。"

#. type: delimited block -
#, no-wrap
msgid ""
"<html>\n"
"<body>\n"
"    <script>\n"
"        parent.postMessage(location.href, location.origin)\n"
"    </script>\n"
"</body>\n"
"</html>\n"
msgstr ""
"<html>\n"
"<body>\n"
"    <script>\n"
"        parent.postMessage(location.href, location.origin)\n"
"    </script>\n"
"</body>\n"
"</html>\n"

#. type: Plain text
msgid ""
"Please keep in mind that this page at the specified location must be "
"provided by the application itself and is _not_ part of the JavaScript "
"adapter!"
msgstr ""
"指定されたlocationにあるこのページは、アプリケーション自体によって提供される必要があり、JavaScriptアダプターの一部ではないことに注意してください。"

#. type: Plain text
msgid ""
"_Silent_ `check-sso` functionality is limited in some modern browsers. "
"Please see the <<_modern_browsers,Modern Browsers with Tracking Protection "
"Section>>."
msgstr ""
"_Silent_ `check-sso` "
"機能は、一部の最新ブラウザーで制限されています。<<_modern_browsers,トラッキング防止機能を備えた最新のブラウザーのセクション>>を参照してください。"

#. type: Plain text
msgid ""
"To enable `login-required` set `onLoad` to `login-required` and pass to the "
"init method:"
msgstr ""
"`login-required` を有効にするには、以下のように `onLoad` に `login-required` を設定し、 `init` "
"メソッドに渡します。"

#. type: delimited block -
#, no-wrap
msgid ""
"keycloak.init({\n"
"    onLoad: 'login-required'\n"
"})\n"
msgstr ""
"keycloak.init({\n"
"    onLoad: 'login-required'\n"
"})\n"

#. type: Plain text
msgid ""
"After the user is authenticated the application can make requests to RESTful"
" services secured by {project_name} by including the bearer token in the "
"`Authorization` header. For example:"
msgstr ""
"ユーザーが認証された後、アプリケーションは `Authorization` "
"ヘッダーにベアラー・トークンを含めることによって、{project_name}によって保護されたRESTfulサービスへのリクエストを行うことができます。以下に例を示します。"

#. type: delimited block -
#, no-wrap
msgid ""
"var loadData = function () {\n"
"    document.getElementById('username').innerText = keycloak.subject;\n"
msgstr ""
"var loadData = function () {\n"
"    document.getElementById('username').innerText = keycloak.subject;\n"

#. type: delimited block -
#, no-wrap
msgid "    var url = 'http://localhost:8080/restful-service';\n"
msgstr "    var url = 'http://localhost:8080/restful-service';\n"

#. type: delimited block -
#, no-wrap
msgid ""
"    var req = new XMLHttpRequest();\n"
"    req.open('GET', url, true);\n"
"    req.setRequestHeader('Accept', 'application/json');\n"
"    req.setRequestHeader('Authorization', 'Bearer ' + keycloak.token);\n"
msgstr ""
"    var req = new XMLHttpRequest();\n"
"    req.open('GET', url, true);\n"
"    req.setRequestHeader('Accept', 'application/json');\n"
"    req.setRequestHeader('Authorization', 'Bearer ' + keycloak.token);\n"

#. type: delimited block -
#, no-wrap
msgid ""
"    req.onreadystatechange = function () {\n"
"        if (req.readyState == 4) {\n"
"            if (req.status == 200) {\n"
"                alert('Success');\n"
"            } else if (req.status == 403) {\n"
"                alert('Forbidden');\n"
"            }\n"
"        }\n"
"    }\n"
msgstr ""
"    req.onreadystatechange = function () {\n"
"        if (req.readyState == 4) {\n"
"            if (req.status == 200) {\n"
"                alert('Success');\n"
"            } else if (req.status == 403) {\n"
"                alert('Forbidden');\n"
"            }\n"
"        }\n"
"    }\n"

#. type: delimited block -
#, no-wrap
msgid ""
"    req.send();\n"
"};\n"
msgstr ""
"    req.send();\n"
"};\n"

#. type: Plain text
msgid ""
"One thing to keep in mind is that the access token by default has a short "
"life expiration so you may need to refresh the access token prior to sending"
" the request. You can do this by the `updateToken` method. The `updateToken`"
" method returns a promise which makes it easy to invoke the service only if "
"the token was successfully refreshed and display an error to the user if it "
"wasn't. For example:"
msgstr ""
"注意すべきことは、デフォルトではアクセス・トークンの有効期限が短いため、リクエストを送信する前にアクセス・トークンを更新する必要があることです。これは "
"`updateToken` メソッドで行うことができます。 `updateToken` "
"メソッドは、トークンが正常にリフレッシュされた場合にのみ、サービスの呼び出しを容易にするPromiseを返し、そうでない場合は、ユーザーにエラーを表示します。以下に例を示します。"

#. type: delimited block -
#, no-wrap
msgid ""
"keycloak.updateToken(30).then(function() {\n"
"    loadData();\n"
"}).catch(function() {\n"
"    alert('Failed to refresh token');\n"
"});\n"
msgstr ""
"keycloak.updateToken(30).then(function() {\n"
"    loadData();\n"
"}).catch(function() {\n"
"    alert('Failed to refresh token');\n"
"});\n"

#. type: Title ====
#, no-wrap
msgid "Session Status iframe"
msgstr "セッション・ステータスiframe"

#. type: Plain text
msgid ""
"By default, the JavaScript adapter creates a hidden iframe that is used to "
"detect if a Single-Sign Out has occurred.  This does not require any network"
" traffic, instead the status is retrieved by looking at a special status "
"cookie.  This feature can be disabled by setting `checkLoginIframe: false` "
"in the options passed to the `init` method."
msgstr ""
"デフォルトでは、JavaScriptアダプターは、シングル・サイン・アウトが発生したかどうかを検出するために使用される非表示のiframeを作成します。これはネットワーク・トラフィックを必要とせず、代わりに特殊なステータス・クッキーを調べることによってステータスを取得します。この機能は、"
" `init` メソッドに渡されるオプションに `checkLoginIframe: false` を設定することで無効にできます。"

#. type: Plain text
msgid ""
"You should not rely on looking at this cookie directly. Its format can "
"change and it's also associated with the URL of the {project_name} server, "
"not your application."
msgstr ""
"このクッキーを直接参照することに頼るべきではありません。フォーマットは変更可能で、アプリケーションではなく{project_name}サーバーのURLに関連付けられています。"

#. type: Plain text
msgid ""
"Session Status iframe functionality is limited in some modern browsers. "
"Please see <<_modern_browsers,Modern Browsers with Tracking Protection "
"Section>>."
msgstr ""
"Session Status "
"iframe機能は、一部の最新ブラウザーで制限されています。<<_modern_browsers,トラッキング防止機能を備えた最新のブラウザーのセクション>>を参照してください。"

#. type: Title ====
#, no-wrap
msgid "Implicit and Hybrid Flow"
msgstr "インプリシット・フローとハイブリッド・フロー"

#. type: Plain text
msgid ""
"By default, the JavaScript adapter uses the https://openid.net/specs/openid-"
"connect-core-1_0.html#CodeFlowAuth[Authorization Code] flow."
msgstr ""
"デフォルトで、JavaScriptアダプターは https://openid.net/specs/openid-connect-"
"core-1_0.html#CodeFlowAuth[認可コード] フローを使用します。"

#. type: Plain text
msgid ""
"With this flow the {project_name} server returns an authorization code, not "
"an authentication token, to the application. The JavaScript adapter "
"exchanges the `code` for an access token and a refresh token after the "
"browser is redirected back to the application."
msgstr ""
"このフローにより、{project_name}サーバーは認証トークンではなく、認可コードをアプリケーションに返します。ブラウザーがアプリケーションにリダイレクトされた後、JavaScriptアダプターは"
"  `code`  をアクセス・トークンとリフレッシュ・トークンに交換します。"

#. type: Plain text
msgid ""
"{project_name} also supports the https://openid.net/specs/openid-connect-"
"core-1_0.html#ImplicitFlowAuth[Implicit] flow where an access token is sent "
"immediately after successful authentication with {project_name}. This may "
"have better performance than standard flow, as there is no additional "
"request to exchange the code for tokens, but it has implications when the "
"access token expires."
msgstr ""
"{project_name}は、{project_name}での認証が成功した直後にアクセス・トークンが送信される "
"https://openid.net/specs/openid-connect-"
"core-1_0.html#ImplicitFlowAuth[インプリシット・フロー] "
"もサポートしています。これは、トークンに対してコードを交換する追加のリクエストが無いので、標準フローよりもパフォーマンスに優れる可能性がありますが、アクセス・トークンの有効期限が切れたときに影響があります。"

#. type: Plain text
msgid ""
"However, sending the access token in the URL fragment can be a security "
"vulnerability. For example the token could be leaked through web server logs"
" and or browser history."
msgstr ""
"ただし、URLフラグメントにアクセス・トークンを送信することはセキュリティー上の脆弱性となります。たとえば、Webサーバーのログやブラウザーの履歴からトークンが漏洩する可能性があります。"

#. type: Plain text
msgid ""
"To enable implicit flow, you need to enable the `Implicit Flow Enabled` flag"
" for the client in the {project_name} Administration Console.  You also need"
" to pass the parameter `flow` with value `implicit` to `init` method:"
msgstr ""
"インプリシット・フローを有効にするには、{project_name}管理コンソールでクライアントの `Implicit Flow Enabled` "
"フラグを有効にする必要があります。 `init` メソッドに `implicit` という値を持つ `flow` パラメータを渡す必要もあります："

#. type: delimited block -
#, no-wrap
msgid ""
"keycloak.init({\n"
"    flow: 'implicit'\n"
"})\n"
msgstr ""
"keycloak.init({\n"
"    flow: 'implicit'\n"
"})\n"

#. type: Plain text
msgid ""
"One thing to note is that only an access token is provided and there is no "
"refresh token. This means that once the access token has expired the "
"application has to do the redirect to the {project_name} again to obtain a "
"new access token."
msgstr ""
"注意すべき点の1つは、アクセス・トークンのみが提供され、リフレッシュ・トークンがないことです。つまり、アクセス・トークンが期限切れになると、アプリケーションは{project_name}へのリダイレクトを再度実行して、新しいアクセス・トークンを取得する必要があります。"

#. type: Plain text
msgid ""
"{project_name} also supports the https://openid.net/specs/openid-connect-"
"core-1_0.html#HybridFlowAuth[Hybrid] flow."
msgstr ""
"{project_name}は https://openid.net/specs/openid-connect-"
"core-1_0.html#HybridFlowAuth[ハイブリッド・フロー] もサポートしています。"

#. type: Plain text
msgid ""
"This requires the client to have both the `Standard Flow Enabled` and "
"`Implicit Flow Enabled` flags enabled in the admin console.  The "
"{project_name} server will then send both the code and tokens to your "
"application.  The access token can be used immediately while the code can be"
" exchanged for access and refresh tokens.  Similar to the implicit flow, the"
" hybrid flow is good for performance because the access token is available "
"immediately.  But, the token is still sent in the URL, and the security "
"vulnerability mentioned earlier may still apply."
msgstr ""
"これは、管理コンソールでクライアントの `Standard Flow Enabled` と `Implicit Flow Enabled` "
"フラグを有効にすることを要求します。{project_name}サーバーはコードとトークンの両方をアプリケーションに送信します。アクセス・トークンとリフレッシュ・トークンの交換ができる間、アクセス・トークンは即時使用できます。インプリシット・フローと同様に、アクセス・トークンがすぐに利用できるため、ハイブリッド・フローはパフォーマンスに優れています。しかし、トークンは引き続きURLに送信され、前述のセキュリティーの脆弱性が当てはまる可能性があります。"

#. type: Plain text
msgid ""
"One advantage in the Hybrid flow is that the refresh token is made available"
" to the application."
msgstr "ハイブリッド・フローの1つの利点は、アプリケーションでリフレッシュ・トークンが利用可能になることです。"

#. type: Plain text
msgid ""
"For the Hybrid flow, you need to pass the parameter `flow` with value "
"`hybrid` to the `init` method:"
msgstr ""
"ハイブリッド・フローの場合、以下のようにパラメーター `flow` を値 `hybrid` で `init` メソッドに渡す必要があります。"

#. type: delimited block -
#, no-wrap
msgid ""
"keycloak.init({\n"
"    flow: 'hybrid'\n"
"})\n"
msgstr ""
"keycloak.init({\n"
"    flow: 'hybrid'\n"
"})\n"

#. type: Title ====
#, no-wrap
msgid "Hybrid Apps with Cordova"
msgstr "ハイブリッド・アプリとCordova"

#. type: Plain text
msgid ""
"Keycloak support hybrid mobile apps developed with "
"https://cordova.apache.org/[Apache Cordova]. The JavaScript adapter has two "
"modes for this: `cordova` and `cordova-native`:"
msgstr ""
"Keycloakは https://cordova.apache.org/[Apache Cordova] "
"で開発されたハイブリッド・モバイルアプリをサポートしています。JavaScriptアダプターには、 `cordova` と `cordova-"
"native` の2つのモードがあります。"

#. type: Plain text
msgid ""
"The default is cordova, which the adapter will automatically select if no "
"adapter type has been configured and window.cordova is present.  When "
"logging in, it will open an "
"https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-"
"inappbrowser/[InApp Browser] that lets the user interact with {project_name}"
" and afterwards returns to the app by redirecting to `http://localhost`. "
"Because of this, you must whitelist this URL as a valid redirect-uri in the "
"client configuration section of the Administration Console."
msgstr ""
"デフォルトはcordovaで、アダプタータイプが設定されておらず、window.cordovaが存在する場合、アダプターは自動的に選択します。ログインすると、"
" https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-"
"inappbrowser/[InApp Browser] が開き、ユーザーは{project_name}とやり取りした後、アプリを "
"`http://localhost` "
"にリダイレクトします。そのため、管理コンソールのクライアント設定のセクションで、このURLを有効なリダイレクトURIとしてホワイトリストに登録する必要があります。"

#. type: Plain text
msgid "While this mode is easy to setup, it also has some disadvantages:"
msgstr "このモードはセットアップが簡単ですが、いくつかの欠点もあります。"

#. type: Plain text
msgid ""
"The InApp-Browser is a browser embedded in the app and is not the phone's "
"default browser. Therefore it will have different settings and stored "
"credentials will not be available."
msgstr ""
"InApp-"
"Browserは、アプリに組み込まれたブラウザーであり、携帯電話のデフォルト・ブラウザーではありません。したがって、設定が異なり、保存されたクレデンシャルは利用できません。"

#. type: Plain text
msgid ""
"The InApp-Browser might also be slower, especially when rendering more "
"complex themes."
msgstr "特に複雑なテーマをレンダリングする場合、InApp-Browserの方が処理速度が遅くなる可能性があります。"

#. type: Plain text
msgid ""
"There are security concerns to consider, before using this mode, such as "
"that it is possible for the app to gain access to the credentials of the "
"user, as it has full control of the browser rendering the login page, so do "
"not allow its use in apps you do not trust."
msgstr ""
"このモードを使用する前に、アプリがログインページをレンダリングするブラウザーを完全に制御しているため、ユーザーのクレデンシャルにアクセスする可能性があるなど、セキュリティーを考慮する必要があります。そのため、信頼できないアプリでは使用を許可しないでください。"

#. type: Plain text
msgid ""
"Use this example app to help you get started: "
"https://github.com/keycloak/keycloak/tree/master/examples/cordova"
msgstr ""
"このサンプル・アプリケーションを使用して、開始します： "
"https://github.com/keycloak/keycloak/tree/master/examples/cordova"

#. type: Plain text
msgid ""
"The alternative mode `cordova-native` takes a different approach.  It opens "
"the login page using the system's browser.  After the user has "
"authenticated, the browser redirects back into the app using a special URL."
"  From there, the {project_name} adapter can finish the login by reading the"
" code or token from the URL."
msgstr ""
"代替モード `cordova-native` "
"は異なるアプローチをとっています。システムのブラウザーを使用してログインページを開きます。ユーザーが認証されると、特別なURLを使用して、ブラウザーがアプリにリダイレクトされます。そこから、{project_name}アダプターは、URLからコードまたはトークンを読み取ってログインを完了できます。"

#. type: Plain text
msgid ""
"You can activate the native mode by passing the adapter type `cordova-"
"native` to the `init` method:"
msgstr ""
"ネイティブモードをアクティブにするには、次のようにアダプタータイプ `cordova-native` を `init` メソッドに渡します。"

#. type: delimited block -
#, no-wrap
msgid ""
"keycloak.init({\n"
"    adapter: 'cordova-native'\n"
"})\n"
msgstr ""
"keycloak.init({\n"
"    adapter: 'cordova-native'\n"
"})\n"

#. type: Plain text
msgid "This adapter required two additional plugins:"
msgstr "このアダプターには、次の2つの追加プラグインが必要でした。"

#. type: Plain text
msgid ""
"https://github.com/google/cordova-plugin-browsertab[cordova-plugin-"
"browsertab]: allows the app to open webpages in the system's browser"
msgstr ""
"https://github.com/google/cordova-plugin-browsertab[cordova-plugin-"
"browsertab]：アプリがシステムのブラウザーでウェブページを開くことができます"

#. type: Plain text
msgid ""
"https://github.com/e-imaxina/cordova-plugin-deeplinks[cordova-plugin-"
"deeplinks]: allow the browser to redirect back to your app by special URLs"
msgstr ""
"https://github.com/e-imaxina/cordova-plugin-deeplinks[cordova-plugin-"
"deeplinks]：ブラウザーが特別なURLでアプリにリダイレクトできるようにします"

#. type: Plain text
msgid ""
"The technical details for linking to an app differ on each platform and "
"special setup is needed.  Please refer to the Android and iOS sections of "
"the https://github.com/e-imaxina/cordova-plugin-"
"deeplinks/blob/master/README.md[deeplinks plugin documentation] for further "
"instructions."
msgstr ""
"アプリにリンクするための技術的詳細は、各プラットフォームで異なり、特別な設定が必要です。詳しい手順については、 "
"https://github.com/e-imaxina/cordova-plugin-"
"deeplinks/blob/master/README.md[ディープリンク・プラグインのドキュメント] "
"のAndroidおよびiOSのセクションを参照してください。"

#. type: Plain text
msgid ""
"There are different kinds of links for opening apps: custom schemes (i.e. "
"`myapp://login` or `android-"
"app://com.example.myapp/https/example.com/login`) and "
"https://developer.apple.com/ios/universal-links/[Universal Links (iOS)]) / "
"https://developer.android.com/training/app-links/deep-linking[Deep Links "
"(Android)].  While the former are easier to setup and tend to work more "
"reliably, the later offer extra security as they are unique and only the "
"owner of a domain can register them.  Custom-URLs are deprecated on iOS.  We"
" recommend that you use universal links, combined with a fallback site with "
"a custom-url link on it for best reliability."
msgstr ""
"アプリを開くためのリンクには、カスタムスキーマ（つまり、 `myapp://login` または `android-"
"app://com.example.myapp/https/example.com/login` ）と "
"https://developer.apple.com/ios/universal-links/[ユニバーサル・リンク（iOS）]）/ "
"https://developer.android.com/training/app-links/deep-"
"linking[ディープリンク（Android）]をクリックします。前者は設定が容易で、より確実に動作する傾向がありますが、後者はセキュリティーが強化され、ドメインの所有者のみが登録できます。カスタムURLはiOSでは推奨されていません。最良の信頼性を得るために、ユニバーサル・リンクとそれにcustom-"
"urlリンクを持つ代替サイトを組み合わせて使用することをお勧めします。"

#. type: Plain text
msgid ""
"Furthermore, we recommend the following steps to improve compatibility with "
"the Keycloak Adapter:"
msgstr "さらに、Keycloakアダプターとの互換性を向上させるには、以下の手順を実行することをお勧めします。"

#. type: Plain text
msgid ""
"Universal Links on iOS seem to work more reliably with `response-mode` set "
"to `query`"
msgstr "iOS上のユニバーサル・リンクは、 `query-mode` に設定された `response-mode` でより確実に動作するようです。"

#. type: Plain text
msgid ""
"To prevent Android from opening a new instance of your app on redirect add "
"the following snippet to `config.xml`:"
msgstr ""
"Androidがリダイレクト時にアプリケーションの新しいインスタンスをオープンすることを防ぐには、次のスニペットを `config.xml` "
"に追加します。"

#. type: delimited block -
#, no-wrap
msgid "<preference name=\"AndroidLaunchMode\" value=\"singleTask\" /> \n"
msgstr "<preference name=\"AndroidLaunchMode\" value=\"singleTask\" /> \n"

#. type: Plain text
msgid ""
"There is an example app that shows how to use the native-mode: "
"https://github.com/keycloak/keycloak/tree/master/examples/cordova-native"
msgstr ""
"ネイティブモードを使用する方法を示すサンプル・アプリケーションがあります: "
"https://github.com/keycloak/keycloak/tree/master/examples/cordova-native"

#. type: Title ====
#, no-wrap
msgid "Custom Adapters"
msgstr "カスタム・アダプター"

#. type: Plain text
msgid ""
"Sometimes it's necessary to run the JavaScript client in environments that "
"are not supported by default (such as Capacitor). To make it possible to use"
" the JavasScript client in these kind of unknown environments is possible to"
" pass a custom adapter. For example a 3rd party library could provide such "
"an adapter to make it possible to run the JavaScript client without issues:"
msgstr ""
"デフォルトでサポートされていない環境（Capacitorなど）でJavaScriptクライアントを実行する必要がある場合があります。このような未知の環境でJavasScriptクライアントを使用できるようにするために、カスタム・アダプターを渡すことができます。たとえば、サードパーティーのライブラリーがそのようなアダプターを提供して、JavaScriptクライアントを問題なく実行できるようにすることができます。"

#. type: delimited block -
#, no-wrap
msgid ""
"import Keycloak from 'keycloak-js';\n"
"import KeycloakCapacitorAdapter from 'keycloak-capacitor-adapter';\n"
msgstr ""
"import Keycloak from 'keycloak-js';\n"
"import KeycloakCapacitorAdapter from 'keycloak-capacitor-adapter';\n"

#. type: delimited block -
#, no-wrap
msgid "const keycloak = new Keycloak();\n"
msgstr "const keycloak = new Keycloak();\n"

#. type: delimited block -
#, no-wrap
msgid ""
"keycloak.init({\n"
"    adapter: KeycloakCapacitorAdapter,\n"
"});\n"
msgstr ""
"keycloak.init({\n"
"    adapter: KeycloakCapacitorAdapter,\n"
"});\n"

#. type: Plain text
msgid ""
"This specific package does not exist, but it gives a pretty good example of "
"how such an adapter could be passed into the client."
msgstr "この特定のパッケージは存在しませんが、そのようなアダプターをクライアントに渡す方法の良い例を示しています。"

#. type: Plain text
msgid ""
"It's also possible to make your own adapter, to do so you will have to "
"implement the methods described in the `KeycloakAdapter` interface. For "
"example the following TypeScript code ensures that all of the methods are "
"properly implemented:"
msgstr ""
"独自のアダプターを作成することもできます。そのためには、 `KeycloakAdapter` "
"インターフェイスで説明されているメソッドを実装する必要があります。たとえば、次のTypeScriptコードにより、すべてのメソッドが適切に実装されます。"

#. type: delimited block -
#, no-wrap
msgid "import Keycloak, { KeycloakAdapter } from 'keycloak-js';\n"
msgstr "import Keycloak, { KeycloakAdapter } from 'keycloak-js';\n"

#. type: delimited block -
#, no-wrap
msgid ""
"// Implement the 'KeycloakAdapter' interface so that all required methods are guaranteed to be present.\n"
"const MyCustomAdapter: KeycloakAdapter = {\n"
"    login(options) {\n"
"        // Write your own implementation here.\n"
"    }\n"
msgstr ""
"// Implement the 'KeycloakAdapter' interface so that all required methods are guaranteed to be present.\n"
"const MyCustomAdapter: KeycloakAdapter = {\n"
"    login(options) {\n"
"        // Write your own implementation here.\n"
"    }\n"

#. type: delimited block -
#, no-wrap
msgid ""
"    // The other methods go here...\n"
"};\n"
msgstr ""
"    // The other methods go here...\n"
"};\n"

#. type: delimited block -
#, no-wrap
msgid ""
"keycloak.init({\n"
"    adapter: MyCustomAdapter,\n"
"});\n"
msgstr ""
"keycloak.init({\n"
"    adapter: MyCustomAdapter,\n"
"});\n"

#. type: Plain text
msgid ""
"Naturally you can also do this without TypeScript by omitting the type "
"information, but ensuring implementing the interface properly will then be "
"left entirely up to you."
msgstr ""
"もちろん、タイプ情報を省略してTypeScriptを使用せずにこれを行うこともできますが、インターフェイスを適切に実装することは、完全にあなた次第です。"

#. type: Title ====
#, no-wrap
msgid "Earlier Browsers"
msgstr "以前のブラウザー"

#. type: Plain text
msgid ""
"The JavaScript adapter depends on Base64 (window.btoa and window.atob), "
"HTML5 History API and optionally the Promise API.  If you need to support "
"browsers that do not have these available (for example, IE9) you need to add"
" polyfillers."
msgstr ""
"JavaScriptアダプターは、Base64（window.btoaとwindow.atob）、HTML5 History "
"API、およびオプションでPromise "
"APIに依存しています。これらが利用できないブラウザー（IE9など）をサポートする必要がある場合は、Polyfillを追加する必要があります。"

#. type: Plain text
msgid "Example polyfill libraries:"
msgstr "Polyfillライブラリーの例："

#. type: Plain text
msgid "Base64 - https://github.com/davidchambers/Base64.js"
msgstr "Base64 - https://github.com/davidchambers/Base64.js"

#. type: Plain text
msgid "HTML5 History - https://github.com/devote/HTML5-History-API"
msgstr "HTML5 History - https://github.com/devote/HTML5-History-API"

#. type: Plain text
msgid "Promise - https://github.com/stefanpenner/es6-promise"
msgstr "Promise - https://github.com/stefanpenner/es6-promise"

#. type: Title ====
#, no-wrap
msgid "Modern Browsers with Tracking Protection"
msgstr "トラッキング防止を備えた最新のブラウザー"

#. type: Plain text
msgid ""
"In the latest versions of some browsers various cookies policies are applied"
" to prevent tracking of the users by third-parties, like SameSite in Chrome "
"or completely blocked third-party cookies. It is expected that those "
"policies will become even more restrictive and adopted by other browsers "
"over time, eventually leading to cookies in third-party contexts to be "
"completely unsupported and blocked by the browsers. The adapter features "
"affected by this might get deprecated in the future."
msgstr ""
"一部のブラウザーの最新バージョンでは、さまざまなCookieポリシーが適用され、ChromeのSameSiteやサードパーティーのCookieを完全にブロックするなど、サードパーティによるユーザーのトラッキングを防止しています。これらのポリシーは今後さらに制限が厳しくなり、他のブラウザによって採用され、最終的にサードパーティーのコンテキストのCookieが完全にサポートされなくなり、ブラウザーによってブロックされることが予想されます。これにより影響を受けるアダプター機能は、将来廃止される可能性があります。"

#. type: Plain text
msgid ""
"Javascript adapter relies on third-party cookies for Session Status iframe, "
"_silent_ `check-sso` and partially also for regular (non-silent) `check-"
"sso`. Those features have limited functionality or are completely disabled "
"based on how the browser is restrictive regarding cookies. The adapter tries"
" to detect this setting and reacts accordingly."
msgstr ""
"JavaScriptアダプターは、Session Status iframe、 _silent_ `check-sso`、および通常の（非サイレント） "
"`check-sso` "
"のサードパーティーCookieに依存しています。これらの機能は、機能が制限されているか、Cookieに関するブラウザーの制限に基づいて完全に無効になっています。アダプターはこの設定を検出しようとし、それに応じて反応します。"

#. type: Title =====
#, no-wrap
msgid "Browsers with \"SameSite=Lax by Default\" Policy"
msgstr "\"SameSite=Lax by Default\" ポリシーのブラウザー"

#. type: Plain text
msgid ""
"All features are supported if SSL / TLS connection is configured on the "
"{project_name} side as well as on the application side. See "
"link:{installguide_link}#_setting_up_ssl[configuring the SSL / TLS]. "
"Affected is e.g. Chrome starting with version 84."
msgstr ""
"SSL / TLS接続が{project_name}側とアプリケーション側で設定されている場合、すべての機能がサポートされます。 "
"link:{installguide_link}#_setting_up_ssl[SSL / TLSの構成] を参照してください。影響を受けるのは "
"バージョン84以降のChromeです。"

#. type: Title =====
#, no-wrap
msgid "Browsers with Blocked Third-Party Cookies"
msgstr "サードパーティーのCookieがブロックされているブラウザー"

#. type: Plain text
msgid ""
"Session Status iframe is not supported and is automatically disabled if such"
" browser behavior is detected by the JS adapter.  This means the adapter "
"cannot use session cookie for Single Sign-Out detection and have to rely "
"purely on tokens. This implies that when user logs out in another window, "
"the application using JavaScript adapter won't be logged out until it tries "
"to refresh the Access Token. Therefore, it is recommended to set Access "
"Token Lifespan to relatively short time, so that the logout is detected "
"rather sooner than later. Please see "
"link:{adminguide_link}#_timeouts[Session and Token Timeouts]."
msgstr ""
"セッション・ステータスiframeはサポートされておらず、そのようなブラウザーの動作がJSアダプターによって検出された場合は自動的に無効になります。つまり、アダプターはシングル・サインアウトの検出にセッションCookieを使用できず、純粋にトークンに依存する必要があります。これは、ユーザーが別のウィンドウでログアウトすると、JavaScriptアダプターを使用するアプリケーションは、アクセストークンをリフレッシュしようとするまでログアウトされないことを意味します。そのため、アクセストークンのライフスパンを比較的短い時間に設定して、ログアウトが検出されるのが遅くなるのを防ぐことを推奨します。"
" link:{adminguide_link}#_timeouts[セッションとトークンのタイムアウト] を参照してください。"

#. type: Plain text
msgid ""
"_Silent_ `check-sso` is not supported and falls back to regular (non-silent)"
" `check-sso` by default. This behaviour can be changed by setting "
"`silentCheckSsoFallback: false` in the options passed to the `init` method. "
"In this case, `check-sso` will be completely disabled if restrictive browser"
" behavior is detected."
msgstr ""
"_Silent_ `check-sso` はサポートされておらず、デフォルトでは通常の（非サイレント） `check-sso` "
"にフォールバックします。この動作は、 `init` メソッドに渡されるオプションで `silentCheckSsoFallback: false` "
"を設定することで変更できます。この場合、ブラウザーの制限的な動作が検出されると、 `check-sso` は完全に無効になります。"

#. type: Plain text
msgid ""
"Regular `check-sso` is affected as well. Since Session Status iframe is "
"unsupported, an additional redirect to {project_name} has to be made when "
"the adapter is initialized to check user's login status. This is different "
"from standard behavior when the iframe is used to tell whether the user is "
"logged in, and the redirect is performed only when logged out."
msgstr ""
"通常の `check-sso` も影響を受けます。Session Status "
"iframeはサポートされていないため、ユーザーのログイン・ステータスを確認するためにアダプターを初期化するときに、{project_name}への追加のリダイレクトを行う必要があります。これは、iframeを使用してユーザーがログインしているかどうかを通知する標準の動作とは異なり、リダイレクトはログアウトした場合にのみ実行されます。"

#. type: Plain text
msgid "An affected browser is e.g. Safari starting with version 13.1."
msgstr "影響を受けるブラウザーは、バージョン13.1以降のSafariです。"

#. type: Title ====
#, no-wrap
msgid "JavaScript Adapter Reference"
msgstr "JavaScriptアダプター・リファレンス"

#. type: Title =====
#, no-wrap
msgid "Constructor"
msgstr "コンストラクター"

#. type: delimited block -
#, no-wrap
msgid ""
"new Keycloak();\n"
"new Keycloak('http://localhost/keycloak.json');\n"
"new Keycloak({ url: 'http://localhost/auth', realm: 'myrealm', clientId: 'myApp' });\n"
msgstr ""
"new Keycloak();\n"
"new Keycloak('http://localhost/keycloak.json');\n"
"new Keycloak({ url: 'http://localhost/auth', realm: 'myrealm', clientId: 'myApp' });\n"

#. type: Title =====
#, no-wrap
msgid "Properties"
msgstr "プロパティー"

#. type: Labeled list
#, no-wrap
msgid "authenticated"
msgstr "authenticated"

#. type: Plain text
msgid "Is `true` if the user is authenticated, `false` otherwise."
msgstr "ユーザーが認証されている場合は `true` 、それ以外の場合は `false` です。"

#. type: Labeled list
#, no-wrap
msgid "token"
msgstr "token"

#. type: Plain text
msgid ""
"The base64 encoded token that can be sent in the `Authorization` header in "
"requests to services."
msgstr "サービスへのリクエストの `Authorization` ヘッダーで送信できるBase64でエンコードされたトークンです。"

#. type: Labeled list
#, no-wrap
msgid "tokenParsed"
msgstr "tokenParsed"

#. type: Plain text
msgid "The parsed token as a JavaScript object."
msgstr "JavaScriptオブジェクトとして解析されたトークン。"

#. type: Labeled list
#, no-wrap
msgid "subject"
msgstr "subject"

#. type: Plain text
msgid "The user id."
msgstr "ユーザーID。"

#. type: Labeled list
#, no-wrap
msgid "idToken"
msgstr "idToken"

#. type: Plain text
msgid "The base64 encoded ID token."
msgstr "Base64でエンコードされたIDトークン。"

#. type: Labeled list
#, no-wrap
msgid "idTokenParsed"
msgstr "idTokenParsed"

#. type: Plain text
msgid "The parsed id token as a JavaScript object."
msgstr "JavaScriptオブジェクトとして解析されたIDトークン。"

#. type: Labeled list
#, no-wrap
msgid "realmAccess"
msgstr "realmAccess"

#. type: Plain text
msgid "The realm roles associated with the token."
msgstr "トークンに関連付けられているレルムのロール。"

#. type: Labeled list
#, no-wrap
msgid "resourceAccess"
msgstr "resourceAccess"

#. type: Plain text
msgid "The resource roles associated with the token."
msgstr "トークンに関連付けられているリソースのロール。"

#. type: Labeled list
#, no-wrap
msgid "refreshToken"
msgstr "refreshToken"

#. type: Plain text
msgid ""
"The base64 encoded refresh token that can be used to retrieve a new token."
msgstr "新しいトークンの取得に使用できるBase64でエンコードされたリフレッシュ・トークン。"

#. type: Labeled list
#, no-wrap
msgid "refreshTokenParsed"
msgstr "refreshTokenParsed"

#. type: Plain text
msgid "The parsed refresh token as a JavaScript object."
msgstr "JavaScriptオブジェクトとして解析されたリフレッシュ・トークン。"

#. type: Labeled list
#, no-wrap
msgid "timeSkew"
msgstr "timeSkew"

#. type: Plain text
msgid ""
"The estimated time difference between the browser time and the "
"{project_name} server in seconds. This value is just an estimation, but is "
"accurate enough when determining if a token is expired or not."
msgstr ""
"ブラウザーと{project_name}サーバーの推定される時間差（秒単位）。この値は単なる見積もりですが、トークンが期限切れになっているかどうかを判断するには十分正確です。"

#. type: Labeled list
#, no-wrap
msgid "responseMode"
msgstr "responseMode"

#. type: Plain text
msgid "Response mode passed in init (default value is fragment)."
msgstr "initに渡されるレスポンス・モード（デフォルト値はfragment）。"

#. type: Labeled list
#, no-wrap
msgid "flow"
msgstr "flow"

#. type: Plain text
msgid "Flow passed in init."
msgstr "initに渡されるフロー。"

#. type: Labeled list
#, no-wrap
msgid "adapter"
msgstr "アダプター"

#. type: Plain text
msgid ""
"Allows you to override the way that redirects and other browser-related "
"functions will be handled by the library.  Available options:"
msgstr ""
"リダイレクトの方法やライブラリーにより処理されるその他のブラウザー関連の関数をオーバーライドすることができます。利用可能なオプションは以下のとおりです。"

#. type: Plain text
msgid ""
"\"default\" - the library uses the browser api for redirects (this is the "
"default)"
msgstr "\"default\" - ライブラリーはリダイレクトにブラウザーのAPIを使用します（これはデフォルトです）"

#. type: Plain text
msgid ""
"\"cordova\" - the library will try to use the InAppBrowser cordova plugin to"
" load keycloak login/registration pages (this is used automatically when the"
" library is working in a cordova ecosystem)"
msgstr ""
"\"cordova\" - ライブラリーは、InAppBrowser "
"cordovaプラグインを使用して、Keycloakのログイン/登録ページを読み込もうとします（これは、ライブラリーがcordovaエコシステムで動作しているときに自動的に使用されます）"

#. type: Plain text
msgid ""
"\"cordova-native\" - the library tries to open the login and registration "
"page using the phone's system browser using the BrowserTabs cordova plugin. "
"This requires extra setup for redirecting back to the app (see <<hybrid-"
"apps-with-cordova>>)."
msgstr ""
"\"cordova-native\" - ライブラリーはBrowserTabs "
"cordovaプラグインを使用して、電話のシステム・ブラウザーを使用してログインページと登録ページを開こうとします。これには、アプリケーションにリダイレクトするための特別な設定が必要です（<<hybrid-"
"apps-with-cordova>>を参照してください）。"

#. type: Plain text
msgid ""
"custom - allows you to implement a custom adapter (only for advanced use "
"cases)"
msgstr "custom - カスタム・アダプターを実装することができます（高度なユースケースのみ）"

#. type: Labeled list
#, no-wrap
msgid "responseType"
msgstr "responseType"

#. type: Plain text
msgid ""
"Response type sent to {project_name} with login requests. This is determined"
" based on the flow value used during initialization, but can be overridden "
"by setting this value."
msgstr ""
"{project_name}にログイン・リクエストとともに送信されたレスポンスタイプ。これは、初期化中に使用されたフロー値に基づいて決定されますが、この値を設定することで上書きできます。"

#. type: Title =====
#, no-wrap
msgid "Methods"
msgstr "メソッド"

#. type: Title ======
#, no-wrap
msgid "init(options)"
msgstr "init(options)"

#. type: Plain text
msgid "Called to initialize the adapter."
msgstr "アダプターを初期化するために呼び出されます。"

#. type: Plain text
msgid "Options is an Object, where:"
msgstr "optionsはオブジェクトで、以下のプロパティーがあります。"

#. type: Plain text
msgid ""
"useNonce - Adds a cryptographic nonce to verify that the authentication "
"response matches the request (default is `true`)."
msgstr "useNonce - 暗号化ノンスを追加して、認証レスポンスがリクエストと一致することを確認します（デフォルトは `true` です）。"

#. type: Plain text
msgid ""
"onLoad - Specifies an action to do on load. Supported values are `login-"
"required` or `check-sso`."
msgstr ""
"onLoad - ロード時に実行するアクションを指定します。サポートされている値は `login-required` または `check-sso` "
"です。"

#. type: Plain text
msgid ""
"silentCheckSsoRedirectUri - Set the redirect uri for silent authentication "
"check if onLoad is set to 'check-sso'."
msgstr ""
"silentCheckSsoRedirectUri - onLoadが'check-"
"sso'に設定されている場合、サイレント認証チェックのリダイレクトURIを設定します。"

#. type: Plain text
msgid ""
"silentCheckSsoFallback - Enables fall back to regular `check-sso` when "
"_silent_ `check-sso` is not supported by the browser (default is `true`)."
msgstr ""
"silentCheckSsoFallback - _silent_ `check-sso` がブラウザーでサポートされていない場合、通常の "
"`check-sso` へのフォールバックを有効にします（デフォルトは `true` です）。"

#. type: Plain text
msgid "token - Set an initial value for the token."
msgstr "token - トークンの初期値を設定します。"

#. type: Plain text
msgid "refreshToken - Set an initial value for the refresh token."
msgstr "refreshToken - リフレッシュ・トークンの初期値を設定します。"

#. type: Plain text
msgid ""
"idToken - Set an initial value for the id token (only together with token or"
" refreshToken)."
msgstr "idToken - IDトークンの初期値を設定します（tokenまたはrefreshTokenとともにする場合のみ）。"

#. type: Plain text
msgid ""
"timeSkew - Set an initial value for skew between local time and "
"{project_name} server in seconds (only together with token or refreshToken)."
msgstr ""
"timeSkew - "
"ローカルの時間と{project_name}サーバーとの間のスキューの初期値を秒単位で設定します（tokenまたはrefreshTokenとともにする場合のみ）。"

#. type: Plain text
msgid ""
"checkLoginIframe - Set to enable/disable monitoring login state (default is "
"`true`)."
msgstr "checkLoginIframe - ログイン状態の監視を有効/無効に設定します（デフォルトは `true` ）。"

#. type: Plain text
msgid ""
"checkLoginIframeInterval - Set the interval to check login state (default is"
" 5 seconds)."
msgstr "checkLoginIframeInterval - ログイン状態を確認する間隔を設定します（デフォルトは5秒）。"

#. type: Plain text
msgid ""
"responseMode - Set the OpenID Connect response mode send to {project_name} "
"server at login request. Valid values are `query` or `fragment`. Default "
"value is `fragment`, which means that after successful authentication will "
"{project_name} redirect to JavaScript application with OpenID Connect "
"parameters added in URL fragment. This is generally safer and recommended "
"over `query`."
msgstr ""
"responseMode - ログイン・リクエストの時に{project_name}サーバーに送信するOpenID "
"Connectレスポンス・モードを設定します。有効な値は、 `query` または `fragment` です。デフォルト値は `fragment` "
"です。つまり、認証が成功した後、{project_name}はURLフラグメントに追加されたOpenID "
"Connectパラメーターとともに、JavaScriptアプリケーションにリダイレクトされます。これは一般的に `query` "
"よりも安全で推奨されます。"

#. type: Plain text
msgid ""
"flow - Set the OpenID Connect flow. Valid values are `standard`, `implicit` "
"or `hybrid`."
msgstr ""
"flow - OpenID Connectのフローを設定します。有効な値は、 `standard` 、 `implicit` 、 `hybrid` "
"のいずれかです。"

#. type: Plain text
msgid ""
"enableLogging - Enables logging messages from Keycloak to the console "
"(default is `false`)."
msgstr "enableLogging - Keycloakからコンソールへのメッセージのロギングを有効にします（デフォルトは `false` ）。"

#. type: Plain text
msgid ""
"pkceMethod - The method for Proof Key Code Exchange "
"(https://datatracker.ietf.org/doc/html/rfc7636[PKCE]) to use. Configuring "
"this value enables the PKCE mechanism. Available options:"
msgstr ""
"pkceMethod - Proof Key Code Exchange（ "
"https://datatracker.ietf.org/doc/html/rfc7636[PKCE] "
"）が使用するメソッド。この値を設定すると、PKCEメカニズムが有効になります。利用可能なオプションは、以下の通りです。"

#. type: Plain text
msgid "\"S256\" - The SHA256 based PKCE method"
msgstr "\"S256\" - SHA256ベースのPKCEメソッド"

#. type: Plain text
msgid ""
"messageReceiveTimeout - Set a timeout in milliseconds for waiting for "
"message responses from the Keycloak server. This is used, for example, when "
"waiting for a message during 3rd party cookies check. The default value is "
"10000."
msgstr ""
"messageReceiveTimeout - "
"Keycloakサーバーからのメッセージ応答を待つためのタイムアウトをミリ秒単位で設定します。これは、例えば、サードパーティーのCookieチェック中にメッセージを待つときに使用されます。デフォルト値は10000です。"

#. type: Plain text
msgid "Returns a promise that resolves when initialization completes."
msgstr "初期化が完了すると解決するPromiseを返します。"

#. type: Title ======
#, no-wrap
msgid "login(options)"
msgstr "login(options)"

#. type: Plain text
msgid "Redirects to login form."
msgstr "ログインフォームにリダイレクトします。"

#. type: Plain text
msgid "Options is an optional Object, where:"
msgstr "Optionsは、オプションのObjectで、ここでは"

#. type: Plain text
msgid "redirectUri - Specifies the uri to redirect to after login."
msgstr "redirectUri - ログイン後にリダイレクトするURIを指定します。"

#. type: Plain text
msgid ""
"prompt - This parameter allows to slightly customize the login flow on the "
"{project_name} server side.  For example enforce displaying the login screen"
" in case of value `login`. See "
"link:{adapterguide_link}#_params_forwarding[Parameters Forwarding Section] "
"for the details and all the possible values of the `prompt` parameter."
msgstr ""
"prompt - このパラメーターを使用すると、{project_name}サーバー側のログインフローを少しだけカスタマイズできます。たとえば、値が "
"`login` の場合は、ログイン画面を表示するようにします。 `prompt` パラメーターの詳細とすべての値については、 "
"link:{adapterguide_link}#_params_forwarding[パラメーター転送のセクション] を参照してください。"

#. type: Plain text
msgid ""
"maxAge - Used just if user is already authenticated. Specifies maximum time "
"since the authentication of user happened. If user is already authenticated "
"for longer time than `maxAge`, the SSO is ignored and he will need to re-"
"authenticate again."
msgstr ""
"maxAge - ユーザーがすでに認証されている場合にのみ使用されます。ユーザーの認証が行われてからの最大時間を指定します。ユーザーがすでに "
"`maxAge` よりも長い時間認証済みの場合、SSOは無視され、再度認証する必要があります。"

#. type: Plain text
msgid ""
"loginHint - Used to pre-fill the username/email field on the login form."
msgstr "loginHint - ログイン・フォームのユーザー名/電子メール・フィールドを事前入力するために使用されます。"

#. type: Plain text
msgid ""
"scope - Used to forward the scope parameter to the {project_name} login "
"endpoint. Use a space-delimited list of scopes. Those typically reference "
"link:{adminguide_link}#_client_scopes[Client scopes] defined on particular "
"client. Note that the scope `openid` will be always be added to the list of "
"scopes by the adapter. For example, if you enter the scope options `address "
"phone`, then the request to {project_name} will contain the scope parameter "
"`scope=openid address phone`."
msgstr ""
"scope - "
"{project_name}ログイン・エンドポイントに、scopeパラメーターを転送するために使用します。スペース区切りのスコープのリストを使用します。それらは通常、特定のクライアントで定義されたlink:{adminguide_link}#_client_scopes[Client"
" scopes]を参照します。スコープ `openid` "
"は、アダプターによって常にスコープのリストに追加されることに注意してください。たとえば、スコープ・オプション `address phone` "
"を入力すると、{project_name}へのリクエストにスコープ・パラメーター `scope=openid address phone` "
"が含まれます。"

#. type: Plain text
msgid ""
"idpHint - Used to tell {project_name} to skip showing the login page and "
"automatically redirect to the specified identity provider instead. More info"
" in the link:{adminguide_link}#_client_suggested_idp[Identity Provider "
"documentation]."
msgstr ""
"idpHint - "
"ログインページの表示をスキップし、代わりに指定されたアイデンティティー・プロバイダーに自動的にリダイレクトするように、{project_name}に指示するために使用されます。詳細は、link:{adminguide_link}#_client_suggested_idp[Identity"
" Provider documentation]を参照してください。"

#. type: Plain text
msgid ""
"action - If value is `register` then user is redirected to registration "
"page, if the value is `UPDATE_PASSWORD` then the user will redirected to the"
" reset password page (if not authenticated will send user to login page "
"first and redirect after authenticated), otherwise to login page."
msgstr ""
"action - 値が `register` の場合、ユーザーは登録ページにリダイレクトされ、値が `UPDATE_PASSWORD` "
"の場合、ユーザーはパスワードリセットページにリダイレクトされます（認証されていない場合は、まずログインページに送られ、認証された後にリダイレクトされます）。"

#. type: Plain text
msgid ""
"locale - Sets the 'ui_locales' query param in compliance with "
"https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest[section "
"3.1.2.1 of the OIDC 1.0 specification]."
msgstr ""
"locale - https://openid.net/specs/openid-connect-"
"core-1_0.html#AuthRequest[OIDC 1.0仕様のセクション3.1.2.1] に準拠した 'ui_locales' "
"クエリー・パラメーターを設定します。"

#. type: Plain text
msgid ""
"cordovaOptions - Specifies the arguments that are passed to the Cordova in-"
"app-browser (if applicable). Options `hidden` and `location` are not "
"affected by these arguments. All available options are defined at "
"https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-"
"inappbrowser/. Example of use: `{ zoom: \"no\", hardwareback: \"yes\" }`;"
msgstr ""
"cordovaOptions - Cordovaのアプリケーション内ブラウザーに渡される引数を指定します（該当する場合）。オプション `hidden` "
"と `location` はこれらの引数の影響を受けません。利用可能なすべてのオプションは "
"https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-"
"inappbrowser/ で定義されています。使用例： `{ zoom: \"no\", hardwareback: \"yes\" }`"

#. type: Title ======
#, no-wrap
msgid "createLoginUrl(options)"
msgstr "createLoginUrl(options)"

#. type: Plain text
msgid "Returns the URL to login form."
msgstr "ログインフォームのURLを返します。"

#. type: Plain text
msgid ""
"Options is an optional Object, which supports same options as the function "
"`login` ."
msgstr "Options はオプションのオブジェクトで、関数 `login` と同じオプションをサポートします。"

#. type: Title ======
#, no-wrap
msgid "logout(options)"
msgstr "logout(options)"

#. type: Plain text
msgid "Redirects to logout."
msgstr "ログアウトにリダイレクトします。"

#. type: Plain text
msgid "redirectUri - Specifies the uri to redirect to after logout."
msgstr "redirectUri - ログアウト後にリダイレクトするURIを指定します。"

#. type: Title ======
#, no-wrap
msgid "createLogoutUrl(options)"
msgstr "createLogoutUrl(options)"

#. type: Plain text
msgid "Returns the URL to logout the user."
msgstr "ユーザーをログアウトするURLを返します。"

#. type: Title ======
#, no-wrap
msgid "register(options)"
msgstr "register(options)"

#. type: Plain text
msgid ""
"Redirects to registration form. Shortcut for login with option action = "
"'register'"
msgstr "登録フォームにリダイレクトします。オプション action = 'register' でのloginメソッドのショートカットです。"

#. type: Plain text
msgid ""
"Options are same as for the login method but 'action' is set to 'register'"
msgstr "optionsはloginメソッドと同じですが、 'action' は 'register' に設定されています。"

#. type: Title ======
#, no-wrap
msgid "createRegisterUrl(options)"
msgstr "createRegisterUrl(options)"

#. type: Plain text
msgid ""
"Returns the url to registration page. Shortcut for createLoginUrl with "
"option action = 'register'"
msgstr ""
"登録ページのURLを返します。オプション action = 'register' でのcreateLoginUrlメソッドのショートカットです。"

#. type: Plain text
msgid ""
"Options are same as for the createLoginUrl method but 'action' is set to "
"'register'"
msgstr "optionsは createLoginUrlメソッドと同じですが、 'action' は 'register' に設定されています。"

#. type: Title ======
#, no-wrap
msgid "accountManagement()"
msgstr "accountManagement()"

#. type: Plain text
msgid "Redirects to the Account Management Console."
msgstr "アカウント管理コンソールにリダイレクトします。"

#. type: Title ======
#, no-wrap
msgid "createAccountUrl(options)"
msgstr "createAccountUrl(options)"

#. type: Plain text
msgid "Returns the URL to the Account Management Console."
msgstr "アカウント管理コンソールのURLを返します。"

#. type: Plain text
msgid ""
"redirectUri - Specifies the uri to redirect to when redirecting back to the "
"application."
msgstr "redirectUri - アプリケーションにリダイレクトで戻るときに、リダイレクトするURIを指定します。"

#. type: Title ======
#, no-wrap
msgid "hasRealmRole(role)"
msgstr "hasRealmRole(role)"

#. type: Plain text
msgid "Returns true if the token has the given realm role."
msgstr "トークンに指定されたレルム・ロールがある場合は、trueを返します。"

#. type: Title ======
#, no-wrap
msgid "hasResourceRole(role, resource)"
msgstr "hasResourceRole(role, resource)"

#. type: Plain text
msgid ""
"Returns true if the token has the given role for the resource (resource is "
"optional, if not specified clientId is used)."
msgstr ""
"トークンに指定されたresourceのロールがある場合は、trueを返します（resourceはオプションであり、指定されていない場合はclientIdが使用されます）。"

#. type: Title ======
#, no-wrap
msgid "loadUserProfile()"
msgstr "loadUserProfile()"

#. type: Plain text
msgid "Loads the users profile."
msgstr "ユーザーのプロファイルを読み込みます。"

#. type: Plain text
msgid "Returns a promise that resolves with the profile."
msgstr "プロファイルで解決されるPromiseを返します。"

#. type: delimited block -
#, no-wrap
msgid ""
"keycloak.loadUserProfile()\n"
"    .then(function(profile) {\n"
"        alert(JSON.stringify(profile, null, \"  \"))\n"
"    }).catch(function() {\n"
"        alert('Failed to load user profile');\n"
"    });\n"
msgstr ""
"keycloak.loadUserProfile()\n"
"    .then(function(profile) {\n"
"        alert(JSON.stringify(profile, null, \"  \"))\n"
"    }).catch(function() {\n"
"        alert('Failed to load user profile');\n"
"    });\n"

#. type: Title ======
#, no-wrap
msgid "isTokenExpired(minValidity)"
msgstr "isTokenExpired(minValidity)"

#. type: Plain text
msgid ""
"Returns true if the token has less than minValidity seconds left before it "
"expires (minValidity is optional, if not specified 0 is used)."
msgstr ""
"トークンが期限切れになる前にminValidity秒を下回っている場合はtrueを返します（指定されていない場合はminValidityはオプションです。0が使用されます）。"

#. type: Title ======
#, no-wrap
msgid "updateToken(minValidity)"
msgstr "updateToken(minValidity)"

#. type: Plain text
msgid ""
"If the token expires within minValidity seconds (minValidity is optional, if"
" not specified 5 is used) the token is refreshed.  If the session status "
"iframe is enabled, the session status is also checked."
msgstr ""
"トークンがminValidity秒以内に期限切れになると（minValidityは省略可能です。指定されていない場合は5が使用されます）、トークンがリフレッシュされます。セッション・ステータスiframeが有効な場合、セッション・ステータスもチェックされます。"

#. type: Plain text
msgid ""
"Returns a promise that resolves with a boolean indicating whether or not the"
" token has been refreshed."
msgstr "トークンがリフレッシュされたかどうかを示すブール値で解決されるPromiseを返します。"

#. type: delimited block -
#, no-wrap
msgid ""
"keycloak.updateToken(5)\n"
"    .then(function(refreshed) {\n"
"        if (refreshed) {\n"
"            alert('Token was successfully refreshed');\n"
"        } else {\n"
"            alert('Token is still valid');\n"
"        }\n"
"    }).catch(function() {\n"
"        alert('Failed to refresh the token, or the session has expired');\n"
"    });\n"
msgstr ""
"keycloak.updateToken(5)\n"
"    .then(function(refreshed) {\n"
"        if (refreshed) {\n"
"            alert('Token was successfully refreshed');\n"
"        } else {\n"
"            alert('Token is still valid');\n"
"        }\n"
"    }).catch(function() {\n"
"        alert('Failed to refresh the token, or the session has expired');\n"
"    });\n"

#. type: Title ======
#, no-wrap
msgid "clearToken()"
msgstr "clearToken()"

#. type: Plain text
msgid ""
"Clear authentication state, including tokens.  This can be useful if "
"application has detected the session was expired, for example if updating "
"token fails."
msgstr ""
"認証状態（トークンを含む）をクリアします。これは、トークンの更新が失敗した場合など、セッションが終了したことをアプリケーションが検出した場合に役立ちます。"

#. type: Plain text
msgid "Invoking this results in onAuthLogout callback listener being invoked."
msgstr "これを呼び出すと、onAuthLogoutコールバック・リスナーが呼び出されます。"

#. type: Title =====
#, no-wrap
msgid "Callback Events"
msgstr "コールバック・イベント"

#. type: Plain text
msgid "The adapter supports setting callback listeners for certain events."
msgstr "アダプターは、特定のイベントのコールバック・リスナーの設定をサポートします。"

#. type: delimited block -
#, no-wrap
msgid "keycloak.onAuthSuccess = function() { alert('authenticated'); }\n"
msgstr "keycloak.onAuthSuccess = function() { alert('authenticated'); }\n"

#. type: Plain text
msgid "The available events are:"
msgstr "使用できるイベントは次のとおりです。"

#. type: Plain text
msgid "onReady(authenticated) - Called when the adapter is initialized."
msgstr "onReady(authenticated) - アダプターが初期化されたときに呼び出されます。"

#. type: Plain text
msgid "onAuthSuccess - Called when a user is successfully authenticated."
msgstr "onAuthSuccess - ユーザーが正常に認証されたときに呼び出されます。"

#. type: Plain text
msgid "onAuthError - Called if there was an error during authentication."
msgstr "onAuthError - 認証時にエラーが発生した場合に呼び出されます。"

#. type: Plain text
msgid "onAuthRefreshSuccess - Called when the token is refreshed."
msgstr "onAuthRefreshSuccess - トークンがリフレッシュされたときに呼び出されます。"

#. type: Plain text
msgid ""
"onAuthRefreshError - Called if there was an error while trying to refresh "
"the token."
msgstr "onAuthRefreshError - トークンをリフレッシュする際にエラーが発生した場合に呼び出されます。"

#. type: Plain text
msgid ""
"onAuthLogout - Called if the user is logged out (will only be called if the "
"session status iframe is enabled, or in Cordova mode)."
msgstr ""
"onAuthLogout - "
"ユーザーがログアウトしたときに呼び出されます（セッション・ステータスiframeが有効な場合、またはCordovaモードの場合にのみ、呼び出されます）。"

#. type: Plain text
msgid ""
"onTokenExpired - Called when the access token is expired. If a refresh token"
" is available the token can be refreshed with updateToken, or in cases where"
" it is not (that is, with implicit flow) you can redirect to login screen to"
" obtain a new access token."
msgstr ""
"onTokenExpired - "
"アクセス・トークンが期限切れになったときに呼び出されます。リフレッシュ・トークンが利用可能な場合、トークンはupdateTokenでリフレッシュすることができます。リフレッシュ・トークンが利用できない場合（つまり、インプリシット・フローの場合）、ログイン画面にリダイレクトして新しいアクセス・トークンを取得できます。"
