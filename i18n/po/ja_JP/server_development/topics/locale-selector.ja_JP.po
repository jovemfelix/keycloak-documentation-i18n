# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Hiroyuki Wada <wadahiro@gmail.com>, 2019
# Kohei Tamura <ktamura.biz.80@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n\n"
"Last-Translator: Kohei Tamura <ktamura.biz.80@gmail.com>, 2021\n"
"Language-Team: Japanese (Japan) (https://www.transifex.com/openstandia/teams/79437/ja_JP/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja_JP\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Title ===
#, no-wrap
msgid "Locale Selector"
msgstr "ロケール・セレクター"

#. type: Plain text
msgid ""
"By default, the locale is selected using the `DefaultLocaleSelectorProvider`"
" which implements the `LocaleSelectorProvider` interface. English is the "
"default language when internationalization is disabled.  With "
"internationalization enabled, the locale is resolved according to the logic "
"described in the "
"link:{adminguide_link}#_user_locale_selection[{adminguide_name}]."
msgstr ""
"デフォルトでは、ロケールは `LocaleSelectorProvider` インターフェイスを実装する "
"`DefaultLocaleSelectorProvider` "
"を使用して選択されます。国際化が無効の場合は、英語がデフォルトの言語です。国際化を有効にすると、ロケールは "
"link:{adminguide_link}#_user_locale_selection[{adminguide_name}] "
"で説明されているロジックに従って解決されます。 "

#. type: Plain text
msgid ""
"This behaviour can be changed through the `LocaleSelectorSPI` by "
"implementing the `LocaleSelectorProvider` and "
"`LocaleSelectorProviderFactory`."
msgstr ""
"この動作は `LocaleSelectorProvider` と `LocaleSelectorProviderFactory` を実装することで "
"`LocaleSelectorSPI` を通して変更することができます。"

#. type: Plain text
msgid ""
"The `LocaleSelectorProvider` interface has a single method, `resolveLocale`,"
" which must return a locale given a `RealmModel` and a nullable `UserModel`."
" The actual request is available from the `KeycloakSession#getContext` "
"method."
msgstr ""
"`LocaleSelectorProvider` インターフェイスは `resolveLocale` という単一のメソッドを持ちます。これは "
"`RealmModel` とnull許容の `UserModel` を与えられたロケールを返さなければなりません。実際のリクエストは "
"`KeycloakSession#getContext` メソッドから利用できます。"

#. type: Plain text
msgid ""
"Custom implementations can extend the `DefaultLocaleSelectorProvider` in "
"order to reuse parts of the default behaviour. For example to ignore the "
"`Accept-Language` request header, a custom implementation could extend the "
"default provider, override it's `getAcceptLanguageHeaderLocale`, and return "
"a null value. As a result the locale selection will fall back on the "
"realms's default language."
msgstr ""
"カスタム実装ではデフォルトの振る舞いの一部を再利用するために `DefaultLocaleSelectorProvider` "
"を継承することができます。例えば `Accept-Language` "
"リクエストヘッダーを無視するために、カスタム実装はデフォルト・プロバイダーを継承し、 `getAcceptLanguageHeaderLocale` "
"をオーバーライドし、そしてnull値を返すことができます。結果として、ロケールの選択はレルムのデフォルト言語に戻ります。"

#. type: Plain text
msgid ""
"Follow the steps in <<_providers,Service Provider Interfaces>> for more "
"details on how to create and deploy a custom provider."
msgstr ""
"カスタム・プロバイダーを作成してデプロイする方法の詳細については、<<_providers,サービス・プロバイダー・インターフェイス>>の手順に従ってください。"
