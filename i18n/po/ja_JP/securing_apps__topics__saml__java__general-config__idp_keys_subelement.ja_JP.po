msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n\n"
"PO-Revision-Date: 2017-10-10 03:41-0400\n"
"Last-Translator: wadahiro <wadahiro@gmail.com>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: crowdin.com\n"
"X-Crowdin-Project: keycloak-documentation-i18n\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /develop/i18n/po/ja_JP/securing_apps__topics__saml__java__general-config__idp_keys_subelement.ja_JP.po\n"

#. type: Title =====
#, no-wrap
msgid "IDP Keys sub element"
msgstr "IDP Keysサブ要素"

#. type: Plain text
msgid "The Keys sub element of IDP is only used to define the certificate or public key to use to verify documents signed by the IDP.  It is defined in the same way as the <<_saml-sp-keys,SP's Keys element>>.  But again, you only have to define one certificate or public key reference. Note that, if both IDP and SP are realized by {project_name} server and adapter, respectively, there is no need to specify the keys for signature validation, see below."
msgstr "IDPのKeysサブ要素は、IDPによって署名されたドキュメントの検証に使用する証明書や公開鍵を定義するために使用されます。Keysサブ要素は、<<_saml-sp-keys,SP's Keys element>>と同じ方法で定義されます。しかし、証明書または公開鍵の参照を1つだけ定義する必要があります。IDPとSPがともに{project_name}サーバーとアダプターによって実現された場合、それぞれで、署名の検証のために鍵を指定する必要はないことに注意して下さい（以下を参照してください）。"

#. type: Plain text
msgid "It is possible to configure SP to obtain public keys for IDP signature validation from published certificates automatically, provided both SP and IDP are implemented by {project_name}.  This is done by removing all declarations of signature validation keys in Keys sub element. If the Keys sub element would then remain empty, it can be omitted completely. The keys are then automatically obtained by SP from SAML descriptor, location of which is derived from SAML endpoint URL specified in the <<_sp-idp-singlesignonservice,IDP SingleSignOnService sub element>>.  Settings of the HTTP client that is used for SAML descriptor retrieval usually needs no additional configuration, however it can be configured in the <<_sp-idp-httpclient,IDP HttpClient sub element>>."
msgstr ""

#. type: Plain text
msgid "It is also possible to specify multiple keys for signature verification. This is done by declaring multiple Key elements within Keys sub element that have `signing` attribute set to `true`.  This is useful for example in situation when the IDP signing keys are rotated: There is usually a transition period when new SAML protocol messages and assertions are signed with the new key but those signed by previous key should still be accepted."
msgstr ""

#. type: Plain text
msgid "It is not possible to configure {project_name} to both obtain the keys for signature verification automatically and define additional static signature verification keys."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"       <IDP entityID=\"idp\">\n"
"            ...\n"
"            <Keys>\n"
"                <Key signing=\"true\">\n"
"                    <KeyStore resource=\"/WEB-INF/keystore.jks\" password=\"store123\">\n"
"                        <Certificate alias=\"demo\"/>\n"
"                    </KeyStore>\n"
"                </Key>\n"
"            </Keys>\n"
"        </IDP>\n"
msgstr ""
"       <IDP entityID=\"idp\">\n"
"            ...\n"
"            <Keys>\n"
"                <Key signing=\"true\">\n"
"                    <KeyStore resource=\"/WEB-INF/keystore.jks\" password=\"store123\">\n"
"                        <Certificate alias=\"demo\"/>\n"
"                    </KeyStore>\n"
"                </Key>\n"
"            </Keys>\n"
"        </IDP>\n"
