# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Kohei Tamura <ktamura.biz.80@gmail.com>, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n\n"
"Last-Translator: Kohei Tamura <ktamura.biz.80@gmail.com>, 2022\n"
"Language-Team: Japanese (Japan) (https://www.transifex.com/openstandia/teams/79437/ja_JP/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja_JP\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Title ===
#, no-wrap
msgid "CSRF attacks"
msgstr "CSRF攻撃"

#. type: Plain text
msgid ""
"A Cross-site request forgery (CSRF) attack uses HTTP requests from users "
"that websites have already authenticated. Any site using cookie-based "
"authentication is vulnerable to CSRF attacks. You can mitigate these attacks"
" by matching a state cookie against a posted form or query parameter."
msgstr ""
"クロスサイト・リクエスト・フォージェリ（CSRF）攻撃は、ウェブサイトが既に認証したユーザーからのHTTPリクエストを利用します。Cookieベースの認証を使用しているサイトは、CSRF攻撃に対して脆弱です。このような攻撃は、投稿されたフォームやクエリー・パラメーターに対してstate"
" Cookieを照合することで軽減できます。"

#. type: Plain text
msgid ""
"The OAuth 2.0 login specification requires that a state cookie matches "
"against a transmitted state parameter. {project_name} fully implements this "
"part of the specification, so all logins are protected."
msgstr ""
"OAuth 2.0のログイン仕様では、state "
"Cookieが送信されたstateパラメーターと一致することが要求されています。{project_name}は、この仕様の一部を完全に実装しているため、すべてのログインが保護されます。"

#. type: Plain text
msgid ""
"The {project_name} Admin Console is a JavaScript/HTML5 application that "
"makes REST calls to the backend {project_name} admin REST API. These calls "
"all require bearer token authentication and consist of JavaScript Ajax "
"calls, so CSRF is impossible. You can configure the admin REST API to "
"validate the CORS origins."
msgstr ""
"{project_name}の管理コンソールは、バックエンドの{project_name}管理REST "
"APIにREST呼び出しを行うJavaScript/HTML5アプリケーションです。これらの呼び出しはすべてベアラートークン認証を必要とし、JavaScriptのAjax呼び出しで構成されているため、CSRFは不可能です。CORSオリジンを検証するように管理REST"
" APIを設定することができます。"

#. type: Plain text
msgid ""
"The user account management section in {project_name} can be vulnerable to "
"CSRF. To prevent CSRF attacks, {project_name} sets a state cookie and embeds"
" the value of this cookie in hidden form fields or query parameters within "
"action links. {project_name} checks the query/form parameter against the "
"state cookie to verify that the user makes the call."
msgstr ""
"{project_name}のユーザー・アカウント管理セクションは、CSRFに対して脆弱な可能性があります。CSRF "
"攻撃を防ぐために、{project_name}は、state "
"Cookieを設定し、このCookieの値をアクションリンク内の隠しフォーム・フィールドやクエリー・パラメーターに埋め込みます。{project_name}"
" は、クエリー/フォーム・パラメーターをstate Cookieと照合して、ユーザーが呼び出しを行ったことを確認します。"
