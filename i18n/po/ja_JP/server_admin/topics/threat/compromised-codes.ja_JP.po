# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Hiroyuki Wada <wadahiro@gmail.com>, 2018
# Kohei Tamura <ktamura.biz.80@gmail.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n\n"
"Last-Translator: Kohei Tamura <ktamura.biz.80@gmail.com>, 2019\n"
"Language-Team: Japanese (Japan) (https://www.transifex.com/openstandia/teams/79437/ja_JP/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja_JP\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Title ===
#, no-wrap
msgid "Compromised Authorization Code"
msgstr "侵害された認可コード"

#. type: Plain text
msgid ""
"For the <<_oidc-auth-flows, OIDC Auth Code Flow>>, it would be very hard for"
" an attacker to compromise {project_name} authorization codes.  "
"{project_name} generates a cryptographically strong random value for its "
"authorization codes so it would be very hard to guess an access token.  An "
"authorization code can only be used once to obtain an access token.  In the "
"admin console you can specify how long an authorization code is valid for on"
" the <<_timeouts, timeouts page>>.  This value should be really short, as "
"short as a few seconds and just long enough for the client to make the "
"request to obtain a token from the code."
msgstr ""
"<<_oidc-auth-flows, "
"OIDC認可コードフロー>>では、攻撃者が{project_name}認可コードを侵害することは非常に困難です。{project_name}は、認可コードに対して暗号的に強いランダムな値を生成するので、アクセストークンを推測することは非常に困難です。認可コードは、アクセストークンを取得するために1回しか使用できません。管理コンソールの<<_timeouts,"
" "
"タイムアウト・ページ>>で認可コードの有効期間を指定できます。この値は、実際には数秒と短く、クライアントがコードからトークンを取得するリクエストを行うのに十分な長さでなければなりません。"

#. type: Plain text
msgid ""
"You can also mitigate against leaked autorization codes by applying PKCE to "
"clients. See <<_proof-key-for-code-exchange, Proof Key for Code Exchange "
"(PKCE)>> to learn how."
msgstr ""
"また、クライアントにPKCEを適用することにより、認可コードの漏洩を軽減できます。方法については、<<_proof-key-for-code-"
"exchange, Proof Key for Code Exchange (PKCE)>>を参照してください。"
