# Japanese translations for keycloak-documentation-i18n package
# Copyright (C) 2017 Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# Automatically generated, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n  \n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Plain text
msgid "|=== |Configuration|Description"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Add Identity Provider"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "OpenID Connect v1.0 Identity Providers"
msgstr ""

#. type: Plain text
msgid "{project_name} can broker identity providers based on the OpenID Connect protocol.  These IDPs must support the <<_oidc, Authorization Code Flow>> as defined by the specification in order to authenticate the user and authorize access."
msgstr ""

#. type: Plain text
msgid "To begin configuring an OIDC provider, go to the `Identity Providers` left menu item and select `OpenID Connect v1.0` from the `Add provider` drop down list.  This will bring you to the `Add identity provider` page."
msgstr ""

#. type: Plain text
#, fuzzy
#| msgid "image:{project_images}/add-client.png[]"
msgid "image:{project_images}/oidc-add-identity-provider.png[]"
msgstr "image:{project_images}/add-client.png[]"

#. type: Plain text
msgid "The initial configuration options on this page are described in <<_general-idp-config, General IDP Configuration>>.  You must define the OpenID Connection configuration options as well.  They basically describe the OIDC IDP you are communicating with."
msgstr ""

#. type: Block title
#, fuzzy, no-wrap
msgid "OpenID Connect Config"
msgstr ""
"#-#-#-#-#  securing_apps__topics__oidc__oidc-overview.ja_JP.po (keycloak-documentation-i18n)  #-#-#-#-#\n"
"OpenID Connect\n"
"#-#-#-#-#  securing_apps__topics__overview__supported-platforms.ja_JP.po (keycloak-documentation-i18n)  #-#-#-#-#\n"
"OpenId Connect\n"
"#-#-#-#-#  securing_apps__topics__overview__supported-protocols.ja_JP.po (keycloak-documentation-i18n)  #-#-#-#-#\n"
"OpenID Connect"

#. type: Plain text
msgid "|Authorization URL |Authorization URL endpoint required by the OIDC protocol"
msgstr ""

#. type: Plain text
msgid "|Token URL |Token URL endpoint required by the OIDC protocol"
msgstr ""

#. type: Plain text
msgid "|Logout URL |Logout URL endpoint defined in the OIDC protocol.  This value is optional."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"|Backchannel Logout\n"
"|Backchannel logout is a background, out-of-band, REST invocation to the IDP to logout the user.  Some IDPs can only perform logout through browser redirects as they may\n"
" only be able to identity sessions via a browser cookie.\n"
msgstr ""

#. type: Plain text
msgid "|User Info URL |User Info URL endpoint defined by the OIDC protocol.  This is an endpoint from which user profile information can be downloaded."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"|Client ID\n"
"|This realm will act as an OIDC client to the external federation IDP you are configuring here.  Your realm will need a OIDC client ID when using the Authorization Code Flow\n"
" to interact with the external IDP\n"
msgstr ""

#. type: Plain text
msgid "|Client Secret |This realm will need a client secret to use when using the Authorization Code Flow."
msgstr ""

#. type: Plain text
msgid "|Issuer |Responses from the IDP may contain an issuer claim.  This config value is optional.  If specified, this claim will be validated against the value you provide."
msgstr ""

#. type: Plain text
msgid "|Default Scopes |Space-separated list of OIDC scopes to send with the authentication request.  The default is `openid`"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"|Prompt\n"
"|Another optional switch.  This is the prompt parameter defined by the OIDC specification. Through it you can force re-authentication and other options.  See the specification for\n"
" more details\n"
msgstr ""

#. type: Plain text
msgid "|Validate Signatures |Another optional switch. This is to specify if {project_name} will verify the signatures on the external ID Token signed by this Identity provider. If this is on, the {project_name} will need to know the public key of the external OIDC identity provider. See below for how to setup it.  WARNING: For the performance purposes, {project_name} caches the public key of the external OIDC identity provider. If you think that private key of your Identity provider was compromised, it is obviously good to update your keys, but it's also good to clear the keys cache. See <<_clear-cache, Clearing the cache>> section for more details."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"|Use JWKS URL\n"
"|Applicable if `Validate Signatures` is on. If the switch is on, then identity provider public keys  will be downloaded from given JWKS URL.\n"
" This allows great flexibility because new keys will be always re-downloaded again when identity provider generates new keypair. If the switch is off,\n"
" then public key (or certificate) from the {project_name} DB is used, so when identity provider keypair changes, you always need to import new key to the {project_name} DB as well.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"|JWKS URL\n"
"|URL where identity provider keys in JWK format are stored. See https://self-issued.info/docs/draft-ietf-jose-json-web-key.html[JWK specification] for more details.\n"
" If you use external {project_name} identity provider, then you can use URL like http://broker-keycloak:8180/auth/realms/test/protocol/openid-connect/certs assuming your brokered\n"
" {project_name} is running on http://broker-keycloak:8180 and it's realm is `test` .\n"
msgstr ""

#. type: Plain text
msgid "|Validating Public Key |Applicable if `Use JWKS URL` is off. Here is the public key in PEM format that must be used to verify external IDP signatures."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"|Validating Public Key Id\n"
"|Applicable if `Use JWKS URL` is off. This field specifies ID of the public key in PEM format. This config value is optional. As there is no standard way\n"
" for computing key ID from key, various external identity providers might use different algorithm from {project_name}. If the value of this field\n"
" is not specified, the validating public key specified above is used for all requests regardless of key ID sent by external IDP. When set, value of this\n"
" field serves as key ID used by {project_name} for validating signatures from such providers and must match the key ID specified by the IDP.\n"
msgstr ""

#. type: Plain text
msgid "|==="
msgstr ""

#. type: Plain text
msgid "You can also import all this configuration data by providing a URL or file that points to OpenID Provider Metadata (see OIDC Discovery specification).  If you are connecting to a {project_name} external IDP, you can import the IDP setttings from the url `<root>/auth/realms/{realm-name}/.well-known/openid-configuration`.  This link is a JSON document describing metadata about the IDP."
msgstr ""
