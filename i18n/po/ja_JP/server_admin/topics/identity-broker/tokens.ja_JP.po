# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Kohei Tamura <ktamura.biz.80@gmail.com>, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n\n"
"Last-Translator: Kohei Tamura <ktamura.biz.80@gmail.com>, 2022\n"
"Language-Team: Japanese (Japan) (https://www.transifex.com/openstandia/teams/79437/ja_JP/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja_JP\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Title ===
#, no-wrap
msgid "Retrieving external IDP tokens"
msgstr "外部IDPトークンの取得"

#. type: Plain text
msgid ""
"With {project_name}, you can store tokens and responses from the "
"authentication process with the external IDP using the `Store Token` "
"configuration option on the IDP's settings page."
msgstr ""
"{project_name}では、IDPの設定ページにある `Store Token` "
"という設定オプションを使って、外部IDPでの認証プロセスから得たトークンとレスポンスを保存することができます。"

#. type: Plain text
msgid ""
"Application code can retrieve these tokens and responses to import extra "
"user information or to request the external IDP securely. For example, an "
"application can use the Google token to use other Google services and REST "
"APIs. To retrieve a token for a particular identity provider, send a request"
" as follows:"
msgstr ""
"アプリケーション・コードは、これらのトークンとレスポンスを取得して、追加のユーザー情報をインポートしたり、外部のIDPを安全に要求したりすることができます。たとえば、アプリケーションはGoogleトークンを使用して、他のGoogleサービスやREST"
" APIを使用することができます。特定のアイデンティティー・プロバイダーのトークンを取得するには、次のようなリクエストを送信します。"

#. type: delimited block -
#, no-wrap
msgid ""
"GET /auth/realms/{realm}/broker/{provider_alias}/token HTTP/1.1\n"
"Host: localhost:8080\n"
"Authorization: Bearer <KEYCLOAK ACCESS TOKEN>\n"
msgstr ""
"GET /auth/realms/{realm}/broker/{provider_alias}/token HTTP/1.1\n"
"Host: localhost:8080\n"
"Authorization: Bearer <KEYCLOAK ACCESS TOKEN>\n"

#. type: Plain text
msgid ""
"An application must authenticate with {project_name} and receive an access "
"token. This access token must have the `broker` client-level role `read-"
"token` set, so the user must have a role mapping for this role, and the "
"client application must have that role within its scope. In this case, since"
" you are accessing a protected service in {project_name}, send the access "
"token issued by {project_name} during the user authentication. You can "
"assign this role to newly imported users in the broker configuration page by"
" setting the *Stored Tokens Readable* switch to *ON*."
msgstr ""
"アプリケーションは{project_name}で認証を行い、アクセストークンを受け取る必要があります。このアクセストークンには、 `broker` "
"クライアントレベル・ロールの `read-token` "
"が設定されていなければなりません。したがって、ユーザーはこのロールに対応するロールマッピングを持っている必要があり、クライアント・アプリケーションはそのスコープ内にそのロールを持っている必要があります。この場合、{project_name}の保護されたサービスにアクセスしているので、ユーザー認証の際に{project_name}が発行したアクセストークンを送信します。ブローカー設定ページで、"
" *Stored Tokens Readable* スイッチを *ON* "
"に設定することで、新規にインポートしたユーザーにこのロールを割り当てることができます。"

#. type: Plain text
msgid ""
"These external tokens can be re-established by logging in again through the "
"provider or using the client-initiated account linking API."
msgstr ""
"これらの外部トークンは、プロバイダーを介して再度ログインするか、クライアントが主導するアカウント・リンキングAPIを使用することで、再設定することができます。"
