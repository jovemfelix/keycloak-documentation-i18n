# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Shinsuke UEDA, 2017
# Tsukasa Amano <t.amano@pro-japan.co.jp>, 2017
# Hiroyuki Wada <wadahiro@gmail.com>, 2018
# Kohei Tamura <ktamura.biz.80@gmail.com>, 2018
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n\n"
"Last-Translator: Kohei Tamura <ktamura.biz.80@gmail.com>, 2018\n"
"Language-Team: Japanese (Japan) (https://www.transifex.com/openstandia/teams/79437/ja_JP/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja_JP\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Title ===
#, no-wrap
msgid "OIDC Token and SAML Assertion Mappings"
msgstr "OIDCトークンとSAMLアサーションのマッピング"

#. type: Plain text
msgid ""
"Applications that receive ID Tokens, Access Tokens, or SAML assertions may "
"need or want different user metadata and roles.  {project_name} allows you "
"to define what exactly is transferred.  You can hardcode roles, claims and "
"custom attributes.  You can pull user metadata into a token or assertion.  "
"You can rename roles.  Basically you have a lot of control of what exactly "
"goes back to the client."
msgstr ""
"IDトークン、アクセストークン、またはSAMLアサーションを受け取るアプリケーションでは、異なるユーザーのメタデータとロールが必要または求める場合があります。{project_name}では、正確に何が転送されるかを定義することができます。ロール、クレーム、カスタム属性をハードコードすることができます。ユーザー・メタデータをトークンまたはアサーションに取り込むことができます。ロールの名前を変更できます。基本的に、正確に何がクライアントに戻るのかをコントロールできます。"

#. type: Plain text
msgid ""
"Within the Admin Console, if you go to an application you've registered, "
"you'll see a `Mappers` tab.  Here's one for an OIDC based client."
msgstr ""
"管理コンソール内で、登録したアプリケーションに移動すると `Mappers` "
"タブが表示されます。ここには、OIDCベースのクライアントの一例があります。"

#. type: Block title
#, no-wrap
msgid "Mappers Tab"
msgstr "Mappersタブ"

#. type: Plain text
msgid "image:{project_images}/mappers-oidc.png[]"
msgstr "image:{project_images}/mappers-oidc.png[]"

#. type: Plain text
msgid ""
"The new client does not have any built-in mappers, however it usually "
"inherits some mappers from the client scopes as described in the "
"<<_client_scopes, client scopes section>>. Protocol mappers map things like,"
" for example, email address to a specific claim in the identity and access "
"token.  Their function should each be self explanatory from their name.  "
"There are additional pre-configured mappers that are not attached to the "
"client that you can add by clicking the `Add Builtin` button."
msgstr ""
"新しいクライアントにはビルトイン・マッパーはありませんが、通常、<<_client_scopes, "
"クライアント・スコープのセクション>>で説明されているように、クライアント・スコープからいくつかのマッパーを継承します。それらのマッパーは、たとえば、メールアドレスをアイデンティティー・トークンとアクセストークンの特定のクレームにマッピングします。それらの機能はそれぞれの名前から自明でなければなりません。クライアントにアタッチされていない追加の事前設定されたマッパーがあり、"
" `Add Builtin` ボタンをクリックすることで追加できます。"

#. type: Plain text
msgid ""
"Each mapper has common settings as well as additional ones depending on "
"which type of mapper you are adding.  Click the `Edit` button next to one of"
" the mappers in the list to get to the config screen."
msgstr ""
"各マッパーには、追加するマッパーのタイプに応じて、共通の設定と追加の設定があります。リスト内のマッパーの1つを選択し、横にある `Edit` "
"ボタンをクリックして、設定画面を表示します。"

#. type: Block title
#, no-wrap
msgid "Mapper Config"
msgstr "マッパーの設定"

#. type: Plain text
msgid "image:{project_images}/mapper-config.png[]"
msgstr "image:{project_images}/mapper-config.png[]"

#. type: Plain text
msgid ""
"The best way to learn about a config option is to hover over its tooltip."
msgstr "設定オプションについて学ぶ最も良い方法は、ツールチップにカーソルを合わせることです。"

#. type: Plain text
msgid ""
"Most OIDC mappers also allow you to control where the claim gets put.  You "
"can opt to include or exclude the claim from both the _id_ and _access_ "
"tokens by fiddling with the `Add to ID token` and `Add to access token` "
"switches."
msgstr ""
"ほとんどのOIDCマッパーでは、クレームがどこに置かれるかを制御することもできます。 `Add to ID token` と `Add to "
"access token` のスイッチを切り替えることで、 _id_ トークンと _access_ "
"トークンの両方にクレームを含めるかどうかを制御することができます。"

#. type: Plain text
msgid ""
"Finally, you can also add other mapper types.  If you go back to the "
"`Mappers` tab, click the `Create` button."
msgstr "最後に、他のマッパータイプを追加することもできます。 `Mappers` タブに戻ったら、 `Create` ボタンをクリックします。"

#. type: Block title
#, no-wrap
msgid "Add Mapper"
msgstr "マッパーの追加"

#. type: Plain text
msgid "image:{project_images}/add-mapper.png[]"
msgstr "image:{project_images}/add-mapper.png[]"

#. type: Plain text
msgid ""
"Pick a `Mapper Type` from the list box.  If you hover over the tooltip, "
"you'll see a description of what that mapper type does.  Different config "
"parameters will appear for different mapper types."
msgstr ""
"リストボックスから `Mapper Type` "
"を選びます。ツールチップにカーソルを合わせると、そのマッパータイプが何をするのかの説明が表示されます。さまざまなマッパータイプに対して異なる設定パラメーターが表示されます。"

#. type: Title ====
#, no-wrap
msgid "Priority order"
msgstr "優先順位"

#. type: Plain text
msgid ""
"Mapper implementations have _priority order_. This priority order is not the"
" configuration property of the mapper; rather, it is the property of the "
"concrete implementation of the mapper."
msgstr ""
"マッパーの実装には _優先順位_ があります。この優先順位はマッパーの設定プロパティーではなく、むしろそれはマッパーの具体的な実装のプロパティーです。"

#. type: Plain text
msgid ""
"Mappers are sorted in the admin console by the order in the list of mappers "
"and the changes in the token or assertion will be applied using that order "
"with the lowest being applied first. This means that implementations which "
"are dependent on other implementations are processed in the needed order."
msgstr ""
"マッパーは、管理コンソールにおけるマッパーのリストの順序に従ってソートされ、トークンまたはアサーションの変更はその順序で最も低いものが最初に適用されます。これは、他の実装に依存している実装が必要な順序で処理されることを意味します。"

#. type: Plain text
msgid ""
"For example, when we first want to compute the roles which will be included "
"with a token, we first resolve audiences based on those roles. Then, we "
"process a JavaScript script that uses the roles and audiences already "
"available in the token."
msgstr ""
"たとえば、最初にトークンに含まれるロールを割り出したい場合は、まずそれらのロールに基づいてオーディエンスを解決します。次に、トークンですでに利用可能なロールとオーディエンスを使用するJavaScriptのスクリプトを処理します。"
