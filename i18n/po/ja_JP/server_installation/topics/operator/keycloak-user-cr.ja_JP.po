# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Kohei Tamura <ktamura.biz.80@gmail.com>, 2020
# Hiroyuki Wada <wadahiro@gmail.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n\n"
"Last-Translator: Hiroyuki Wada <wadahiro@gmail.com>, 2020\n"
"Language-Team: Japanese (Japan) (https://www.transifex.com/openstandia/teams/79437/ja_JP/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja_JP\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Block title
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Block title
#, no-wrap
msgid "Additional resources"
msgstr "追加のリソース"

#. type: Block title
#, no-wrap
msgid "Procedure"
msgstr "手順"

#. type: Plain text
msgid "You have a YAML file for this custom resource."
msgstr "このカスタムリソース用のYAMLファイルがあること。"

#. type: Plain text
msgid ""
"You have cluster-admin permission or an equivalent level of permissions "
"granted by an administrator."
msgstr "cluster-adminパーミッションまたは同等のレベルのパーミッションが管理者によって付与されていること。"

#. type: delimited block -
#, no-wrap
msgid "$ {create_cmd_brief} describe keycloak <CR-name>\n"
msgstr "$ {create_cmd_brief} describe keycloak <CR-name>\n"

#. type: Block title
#, no-wrap
msgid "Results"
msgstr "結果"

#. type: Plain text
msgid ""
"If you have an external database, you can modify the Keycloak custom "
"resource to support it. See xref:_external_database[Connecting to an "
"external database]."
msgstr ""
"外部データベースがある場合は、Keycloakカスタムリソースを変更してそれをサポートできます。 "
"xref:_external_database[外部データベースへの接続] を参照してください。"

#. type: Plain text
msgid "Log into the admin console for the related instance of {project_name}."
msgstr "{project_name}の関連インスタンスの管理コンソールにログインします。"

#. type: Title ===
#, no-wrap
msgid "Creating a user custom resource"
msgstr "ユーザー・カスタム・リソースの作成"

#. type: Plain text
msgid ""
"You can use the Operator to create users in {project_name} as defined by a "
"custom resource. You define the properties of the user custom resource in a "
"YAML file."
msgstr ""
"Operatorを使用して、カスタムリソースで定義されているように{project_name}にユーザーを作成できます。ユーザー・カスタム・リソースのプロパティーをYAMLファイルで定義します。"

#. type: delimited block =
msgid ""
"You can update properties, except for the password, in the YAML file and "
"changes appear in the {project_name} admin console, however changes to the "
"admin console do not update the custom resource."
msgstr ""
"YAMLファイルでパスワード以外のプロパティーを更新できます。変更は{project_name}管理コンソールに表示されますが、管理コンソールを変更してもカスタムリソースは更新されません。"

#. type: Block title
#, no-wrap
msgid "Example YAML file for a user custom resource"
msgstr "ユーザー・カスタム・リソースのYAMLファイルの例"

#. type: Code block
#, no-wrap
msgid ""
"apiVersion: keycloak.org/v1alpha1\n"
"kind: KeycloakUser\n"
"metadata:\n"
"  name: example-user\n"
"spec:\n"
"  user:\n"
"    username: \"realm_user\"\n"
"    firstName: \"John\"\n"
"    lastName: \"Doe\"\n"
"    email: \"user@example.com\"\n"
"    enabled: True\n"
"    emailVerified: False\n"
"    realmRoles:\n"
"      - \"offline_access\"\n"
"    clientRoles:\n"
"      account:\n"
"        - \"manage-account\"\n"
"      realm-management:\n"
"        - \"manage-users\"\n"
"  realmSelector:\n"
"    matchLabels:\n"
"ifeval::[{project_community}==true]\n"
"      app: example-keycloak\n"
"endif::[]  \n"
"ifeval::[{project_product}==true]\n"
"      app: sso\n"
"endif::[]  \n"
msgstr ""
"apiVersion: keycloak.org/v1alpha1\n"
"kind: KeycloakUser\n"
"metadata:\n"
"  name: example-user\n"
"spec:\n"
"  user:\n"
"    username: \"realm_user\"\n"
"    firstName: \"John\"\n"
"    lastName: \"Doe\"\n"
"    email: \"user@example.com\"\n"
"    enabled: True\n"
"    emailVerified: False\n"
"    realmRoles:\n"
"      - \"offline_access\"\n"
"    clientRoles:\n"
"      account:\n"
"        - \"manage-account\"\n"
"      realm-management:\n"
"        - \"manage-users\"\n"
"  realmSelector:\n"
"    matchLabels:\n"
"ifeval::[{project_community}==true]\n"
"      app: example-keycloak\n"
"endif::[]  \n"
"ifeval::[{project_product}==true]\n"
"      app: sso\n"
"endif::[]  \n"

#. type: Plain text
msgid ""
"The `realmSelector` matches the labels of an existing realm custom resource."
msgstr "`realmSelector` は既存のレルム・カスタム・リソースのラベルと一致します。"

#. type: Plain text
msgid ""
"Use this command on the YAML file that you created: `{create_cmd} -f "
"<user_cr>.yaml`. For example:"
msgstr "作成したYAMLファイルで `{create_cmd} -f 1.yaml` のコマンドを使用します。例えば、"

#. type: delimited block -
#, no-wrap
msgid ""
"$ {create_cmd} -f initial_user.yaml\n"
"keycloak.keycloak.org/example-user created\n"
msgstr ""
"$ {create_cmd} -f initial_user.yaml\n"
"keycloak.keycloak.org/example-user created\n"

#. type: Plain text
msgid "Click Users."
msgstr "Usersをクリックします。"

#. type: Plain text
msgid "Search for the user that you defined in the YAML file."
msgstr "YAMLファイルで定義したユーザーを検索します。"

#. type: Plain text
msgid "The user is in the list."
msgstr "ユーザーが一覧に含まれています。"

#. type: Plain text
msgid "image:images/user_list.png[]"
msgstr "image:images/user_list.png[]"

#. type: Plain text
msgid ""
"After a user is created, the Operator creates a Secret containing the both "
"username and password using the following naming pattern: `credential-<realm"
" name>-<username>-<namespace>`. Here's an example:"
msgstr ""
"ユーザーの作成後、Operatorは `credential-<realm name>-<username>-<namespace>` "
"の命名パターンを使用して、ユーザー名とパスワードの両方を含むシークレットを作成します。次に例を示します。"

#. type: Block title
#, no-wrap
msgid "`KeycloakUser` Secret"
msgstr "`KeycloakUser` シークレット"

#. type: Code block
#, no-wrap
msgid ""
"kind: Secret\n"
"apiVersion: v1\n"
"data:\n"
"  password: <base64 encoded password>\n"
"  username: <base64 encoded username>\n"
"type: Opaque\n"
msgstr ""
"kind: Secret\n"
"apiVersion: v1\n"
"data:\n"
"  password: <base64 encoded password>\n"
"  username: <base64 encoded username>\n"
"type: Opaque\n"

#. type: Plain text
msgid ""
"Once the Operator processes the custom resource, view the status with this "
"command:"
msgstr "Operatorがカスタムリソースを処理したら、次のコマンドでステータスを表示します。"

#. type: Block title
#, no-wrap
msgid "User custom resource Status"
msgstr "ユーザー・カスタム・リソースのステータス"

#. type: Code block
#, no-wrap
msgid ""
"Name:         example-realm-user\n"
"Namespace:    keycloak\n"
"ifeval::[{project_community}==true]\n"
"Labels:       app=example-keycloak\n"
"endif::[]  \n"
"ifeval::[{project_product}==true]\n"
"Labels:       app=sso\n"
"endif::[]  \n"
"API Version:  keycloak.org/v1alpha1\n"
"Kind:         KeycloakUser\n"
"Spec:\n"
"  Realm Selector:\n"
"    Match Labels:\n"
"ifeval::[{project_community}==true]\n"
"      App: example-keycloak\n"
"endif::[]  \n"
"ifeval::[{project_product}==true]\n"
"      App: sso\n"
"endif::[]  \n"
"  User:\n"
"    Email:           realm_user@redhat.com\n"
"    Credentials:\n"
"      Type:          password\n"
"      Value:         <user password>\n"
"    Email Verified:  false\n"
"    Enabled:         true\n"
"    First Name:      John\n"
"    Last Name:       Doe\n"
"    Username:        realm_user\n"
"Status:\n"
"  Message:\n"
"  Phase:    reconciled\n"
"Events:     <none>\n"
msgstr ""
"Name:         example-realm-user\n"
"Namespace:    keycloak\n"
"ifeval::[{project_community}==true]\n"
"Labels:       app=example-keycloak\n"
"endif::[]  \n"
"ifeval::[{project_product}==true]\n"
"Labels:       app=sso\n"
"endif::[]  \n"
"API Version:  keycloak.org/v1alpha1\n"
"Kind:         KeycloakUser\n"
"Spec:\n"
"  Realm Selector:\n"
"    Match Labels:\n"
"ifeval::[{project_community}==true]\n"
"      App: example-keycloak\n"
"endif::[]  \n"
"ifeval::[{project_product}==true]\n"
"      App: sso\n"
"endif::[]  \n"
"  User:\n"
"    Email:           realm_user@redhat.com\n"
"    Credentials:\n"
"      Type:          password\n"
"      Value:         <user password>\n"
"    Email Verified:  false\n"
"    Enabled:         true\n"
"    First Name:      John\n"
"    Last Name:       Doe\n"
"    Username:        realm_user\n"
"Status:\n"
"  Message:\n"
"  Phase:    reconciled\n"
"Events:     <none>\n"

#. type: Plain text
msgid ""
"To back up your database using custom resources, see xref:_backup-"
"cr[schedule database backups]."
msgstr ""
"カスタムリソースを使用してデータベースをバックアップするには、 xref:_backup-cr[データベースのバックアップをスケジュールする] "
"を参照してください。"
