# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n\n"
"Last-Translator: Hiroyuki Wada <wadahiro@gmail.com>, 2017\n"
"Language-Team: Japanese (Japan) (https://www.transifex.com/openstandia/teams/79437/ja_JP/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja_JP\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Title ===
#, no-wrap
msgid "Replication and Failover"
msgstr "レプリケーションとフェイルオーバー"

#. type: Plain text
msgid ""
"There are caches like `sessions`, `authenticationSessions`, "
"`offlineSessions`, `loginFailures` and a few others (See <<_eviction>> for "
"more details), which are configured as distributed caches when using a "
"clustered setup. Entries are not replicated to every single node, but "
"instead one or more nodes is chosen as an owner of that data.  If a node is "
"not the owner of a specific cache entry it queries the cluster to obtain it."
"  What this means for failover is that if all the nodes that own a piece of "
"data go down, that data is lost forever.  By default, {project_name} only "
"specifies one owner for data.  So if that one node goes down that data is "
"lost.  This usually means that users will be logged out and will have to "
"login again."
msgstr ""
"`sessions` 、 `authenticationSessions` 、 `offlineSessions`  、 `loginFailures`"
" などのキャッシュがあります（詳細は<<_eviction>> "
"を参照）。クラスター化された設定を使用するときは分散キャッシュとして設定されます。エントリーはすべてのノードにひとつひとつレプリケーションされるわけではありませんが、1つ以上のノードがそのデータの所有者として選ばれます。ノードが特定のキャッシュ・エントリーの所有者ではない場合は、そのキャッシュ・エントリーを取得するためにクラスターに問い合わせをします。これがフェイルオーバーに対して何を意味するかというと、データを保持しているノードがすべてダウンした場合は、そのデータは永遠に失われてしまうということです。デフォルトでは、{project_name}が指定するデータの所有者は1つだけです。そのため、その1つのノードがダウンした場合は、そのデータは失われることになります。このことは通常、ユーザーはログアウトされ、再度ログインし直さなければならないということを意味します。"

#. type: Plain text
msgid ""
"You can change the number of nodes that replicate a piece of data by change "
"the `owners` attribute in the `distributed-cache` declaration."
msgstr ""
"`distributed-cache` の宣言で `owners` 属性を変更すると、データをレプリケートするノードの数を変更することができます。"

#. type: Block title
#, no-wrap
msgid "owners"
msgstr "owners"

#. type: delimited block -
#, no-wrap
msgid ""
"<subsystem xmlns=\"{subsystem_infinispan_xml_urn}\">\n"
"   <cache-container name=\"keycloak\">\n"
"       <distributed-cache name=\"sessions\" owners=\"2\"/>\n"
"...\n"
msgstr ""
"<subsystem xmlns=\"{subsystem_infinispan_xml_urn}\">\n"
"   <cache-container name=\"keycloak\">\n"
"       <distributed-cache name=\"sessions\" owners=\"2\"/>\n"
"...\n"

#. type: Plain text
msgid ""
"Here we've changed it so at least two nodes will replicate one specific user"
" login session."
msgstr "ここで上記のとおりに変更すると、少なくとも2つのノードが1つの特定のユーザー・ログイン・セッションをレプリケーションします。"

#. type: Plain text
#, no-wrap
msgid ""
"The number of owners recommended is really dependent on your deployment.  If you do not care if users are logged\n"
"      out when a node goes down, then one owner is good enough and you will avoid replication.\n"
msgstr ""
"推奨される所有者数は、構成によって異なります。ノードがダウンした時にユーザーがログアウトされてもされなくても良い場合は、所有者は1つで十分であり、レプリケーションを避けることができます。\n"

#. type: Plain text
#, no-wrap
msgid ""
"It is generally wise to configure your environment to use loadbalancer with sticky sessions. It is beneficial for performance\n"
"     as {project_name} server, where the particular request is served, will be usually the owner of the data from the distributed cache\n"
"     and will therefore be able to look up the data locally. See <<sticky-sessions>> for more details.\n"
msgstr ""
"スティッキー・セッションでロードバランサーを使用するように環境を設定することは、一般的には賢明です。通常は、特定のリクエストが処理される{project_name}サーバーが分散キャッシュデータの所有者であるため、パフォーマンスを向上させるために有益です。したがって、ローカルでデータをルックアップできます。"
" 詳細は<<sticky-sessions>>を参照してください。\n"
