# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n  \n"
"POT-Creation-Date: 2017-09-20 07:58+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: source/securing_apps/topics/saml/java/general-config/sp-keys/key_pems.adoc:3
msgid "====== Key PEMS"
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/saml/java/general-config/sp-keys/key_pems.adoc:8
msgid ""
"Within the `Key` element you declare your keys and certificates directly "
"using the sub elements `PrivateKeyPem`, `PublicKeyPem`, and "
"`CertificatePem`.  The values contained in these elements must conform to "
"the PEM key format.  You usually use this option if you are generating keys "
"using `openssl` or similar command line tool."
msgstr ""

#. type: delimited block -
#: source/securing_apps/topics/saml/java/general-config/sp-keys/key_pems.adoc:21
#, no-wrap
msgid ""
"<Keys>\n"
"   <Key signing=\"true\">\n"
"      <PrivateKeyPem>\n"
"         2341251234AB31234==231BB998311222423522334\n"
"      </PrivateKeyPem>\n"
"      <CertificatePem>\n"
"         211111341251234AB31234==231BB998311222423522334\n"
"      </CertificatePem>\n"
"   </Key>\n"
"</Keys>\n"
msgstr ""
