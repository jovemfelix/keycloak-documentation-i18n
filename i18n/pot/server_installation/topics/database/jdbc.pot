# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n  \n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title ==
#, no-wrap
msgid "Prerequisites"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Procedure"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Declare Your JDBC Drivers"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Packaging the JDBC driver"
msgstr ""

#. type: Plain text
msgid ""
"Find and download the JDBC driver JAR for your RDBMS. Before you can use "
"this driver, you must package it up into a module and install it into the "
"server. Modules define JARs that are loaded into the {project_name} "
"classpath and the dependencies those JARs have on other modules."
msgstr ""

#. type: Plain text
msgid ""
"Create a directory structure to hold your module definition within the _.../"
"modules/_ directory of your {project_name} distribution."
msgstr ""

#. type: Plain text
msgid ""
"The convention is use the Java package name of the JDBC driver for the name "
"of the directory structure. For PostgreSQL, create the directory _org/"
"postgresql/main_."
msgstr ""

#. type: Plain text
msgid ""
"Copy your database driver JAR into this directory and create an empty "
"_module.xml_ file within it too."
msgstr ""

#. type: Block title
#, no-wrap
msgid "Module Directory"
msgstr ""

#. type: Plain text
msgid "image:{project_images}/db-module.png[Module Directory]"
msgstr ""

#. type: Plain text
msgid "Open up the _module.xml_ file and create the following XML:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Module XML"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<module xmlns=\"urn:jboss:module:1.3\" name=\"org.postgresql\">\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    <resources>\n"
"        <resource-root path=\"postgresql-VERSION.jar\"/>\n"
"    </resources>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    <dependencies>\n"
"        <module name=\"javax.api\"/>\n"
"        <module name=\"javax.transaction.api\"/>\n"
"    </dependencies>\n"
"</module>\n"
msgstr ""

#. type: Plain text
msgid ""
"The module name should match the directory structure of your module. So, "
"_org/postgresql_ maps to `org.postgresql`."
msgstr ""

#. type: Plain text
msgid ""
"The `resource-root path` attribute should specify the JAR filename of the "
"driver."
msgstr ""

#. type: Plain text
msgid ""
"The rest are just the normal dependencies that any JDBC driver JAR would "
"have."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Declaring and loading the JDBC driver"
msgstr ""

#. type: Plain text
msgid ""
"You declare your JDBC into your deployment profile so that it loads and "
"becomes available when the server boots up."
msgstr ""

#. type: Plain text
msgid "You have packaged the JDBC driver."
msgstr ""

#. type: Plain text
msgid ""
"Declare your JDBC driver by editing one of these files based on your "
"deployment mode:"
msgstr ""

#. type: Plain text
msgid "For standard mode, edit _.../standalone/configuration/standalone.xml_."
msgstr ""

#. type: Plain text
msgid ""
"For standard clustering mode, edit _.../standalone/configuration/standalone-"
"ha.xml_."
msgstr ""

#. type: Plain text
msgid "For domain mode, edit _.../domain/configuration/domain.xml_."
msgstr ""

#. type: Plain text
msgid ""
"In domain mode, make sure you edit the profile you are using: either `auth-"
"server-standalone` or `auth-server-clustered`"
msgstr ""

#. type: Plain text
msgid ""
"Within the profile, search for the `drivers` XML block within the "
"`datasources` subsystem."
msgstr ""

#. type: Plain text
msgid ""
"You should see a pre-defined driver declared for the H2 JDBC driver. This is "
"where you'll declare the JDBC driver for your external database."
msgstr ""

#. type: Block title
#, no-wrap
msgid "JDBC Drivers"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  <subsystem xmlns=\"{subsystem_datasources_xml_urn}\">\n"
"     <datasources>\n"
"       ...\n"
"       <drivers>\n"
"          <driver name=\"h2\" module=\"com.h2database.h2\">\n"
"              <xa-datasource-class>org.h2.jdbcx.JdbcDataSource</xa-datasource-class>\n"
"          </driver>\n"
"       </drivers>\n"
"     </datasources>\n"
"  </subsystem>\n"
msgstr ""

#. type: Plain text
msgid "Within the `drivers` XML block, declare an additional JDBC driver."
msgstr ""

#. type: Plain text
msgid "Assign any `name` to this driver."
msgstr ""

#. type: Plain text
msgid ""
"Specify the `module` attribute which points to the `module` package that you "
"created earlier for the driver JAR."
msgstr ""

#. type: Plain text
msgid "Specify the driver's Java class."
msgstr ""

#. type: Plain text
msgid ""
"Here's an example of installing a PostgreSQL driver that lives in the module "
"example defined earlier in this chapter."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"  <subsystem xmlns=\"{subsystem_datasources_xml_urn}\">\n"
"     <datasources>\n"
"       ...\n"
"       <drivers>\n"
"          <driver name=\"postgresql\" module=\"org.postgresql\">\n"
"              <xa-datasource-class>org.postgresql.xa.PGXADataSource</xa-datasource-class>\n"
"          </driver>\n"
"          <driver name=\"h2\" module=\"com.h2database.h2\">\n"
"              <xa-datasource-class>org.h2.jdbcx.JdbcDataSource</xa-datasource-class>\n"
"          </driver>\n"
"       </drivers>\n"
"     </datasources>\n"
"  </subsystem>\n"
msgstr ""
