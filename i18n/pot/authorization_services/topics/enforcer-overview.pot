# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n  \n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: source/authorization_services/topics/auth-services-architecture.adoc:80
#: source/authorization_services/topics/enforcer-overview.adoc:8
msgid "image:images/pep-pattern-diagram.png[alt=\"PEP Overview\"]"
msgstr ""

#. type: Title =
#: source/authorization_services/topics/enforcer-overview.adoc:2
#, no-wrap
msgid "Policy Enforcers"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/enforcer-overview.adoc:7
msgid ""
"Policy Enforcement Point (PEP) is a design pattern and as such you can "
"implement it in different ways. {project_name} provides all the necessary "
"means to implement PEPs for different platforms, environments, and "
"programming languages. {project_name} Authorization Services presents a "
"RESTful API, and leverages OAuth2 authorization capabilities for fine-"
"grained authorization using a centralized authorization server."
msgstr ""
