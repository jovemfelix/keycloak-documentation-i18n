# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n  \n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: source/authorization_services/topics/service-authorization-authorization-api-aapi.adoc:29
#: source/authorization_services/topics/service-authorization-whatis-obtain-aat.adoc:26
#: source/authorization_services/topics/service-entitlement-entitlement-api-aapi.adoc:46
#: source/authorization_services/topics/service-entitlement-entitlement-api-aapi.adoc:81
#: source/authorization_services/topics/service-entitlement-whatis-obtain-eat.adoc:20
#: source/authorization_services/topics/service-rpt-token-introspection.adoc:43
msgid "As a result, the server response is:"
msgstr ""

#. type: Title =
#: source/authorization_services/topics/service-authorization-whatis-obtain-aat.adoc:2
#, no-wrap
msgid "What is an AAT and How to Obtain It"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/service-authorization-whatis-obtain-aat.adoc:6
msgid ""
"An authorization API token (AAT) is a special OAuth2 access token with the "
"scope *uma_authorization*. When you create a user, {project_name} "
"automatically assigns the role _uma_authorization_ to the user. The "
"_uma_authorization_ role is a default realm role."
msgstr ""

#. type: Block title
#: source/authorization_services/topics/service-authorization-whatis-obtain-aat.adoc:7
#, no-wrap
msgid "Default Role uma_authorization"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/service-authorization-whatis-obtain-aat.adoc:9
msgid ""
"image:{project_images}/service/rs-uma-authorization-role.png[alt=\"Default "
"Role uma_authorization \"]"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/service-authorization-whatis-obtain-aat.adoc:11
msgid ""
"An AAT enables a client application to query the server for user permissions."
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/service-authorization-whatis-obtain-aat.adoc:14
msgid ""
"Client applications can obtain an AAT from {project_name} like any other "
"OAuth2 access token. Usually, client applications obtain AATs after the user "
"is successfully authenticated in {project_name}. By default, the "
"_authorization_code_ grant type is used to authenticate users, and the "
"server will issue an OAuth2 access token to the client application acting on "
"their behalf."
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/service-authorization-whatis-obtain-aat.adoc:16
msgid ""
"The example below uses the Resource Owner Password Credentials Grant Type to "
"request an AAT:"
msgstr ""

#. type: Code block
#: source/authorization_services/topics/service-authorization-whatis-obtain-aat.adoc:23
#: source/authorization_services/topics/service-entitlement-whatis-obtain-eat.adoc:17
#, no-wrap
msgid ""
"curl -X POST \\\n"
"    -H \"Authorization: Basic aGVsbG8td29ybGQtYXV0aHotc2VydmljZTpwYXNzd29yZA==\" \\\n"
"    -H \"Content-Type: application/x-www-form-urlencoded\" \\\n"
"    -d 'username=${username}&password=${user_password}&grant_type=password' \\\n"
"    \"http://localhost:8080/auth/realms/${realm_name}/protocol/openid-connect/token\"\n"
msgstr ""

#. type: Code block
#: source/authorization_services/topics/service-authorization-whatis-obtain-aat.adoc:38
#, no-wrap
msgid ""
"{\n"
"  \"access_token\": ${AAT},\n"
"  \"expires_in\": 300,\n"
"  \"refresh_expires_in\": 1800,\n"
"  \"refresh_token\": ${refresh_token},\n"
"  \"token_type\": \"bearer\",\n"
"  \"id_token\": ${id_token},\n"
"  \"not-before-policy\": 0,\n"
"  \"session_state\": \"3cad2afc-855b-47b7-8e4d-a21c66e312fb\"\n"
"}\n"
msgstr ""
