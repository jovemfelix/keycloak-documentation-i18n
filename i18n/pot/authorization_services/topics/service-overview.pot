# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n  \n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Attribute :authorizationguide_name_short:
#, no-wrap
msgid "Authorization Services"
msgstr ""

#. type: Plain text
msgid ""
"OAuth2 clients (such as front end applications) can obtain access tokens "
"from the server using the token endpoint and use these same tokens to access "
"resources protected by a resource server (such as back end services). In the "
"same way, {project_name} Authorization Services provide extensions to OAuth2 "
"to allow access tokens to be issued based on the processing of all policies "
"associated with the resource(s) or scope(s) being requested. This means that "
"resource servers can enforce access to their protected resources based on "
"the permissions granted by the server and held by an access token. In "
"{project_name} Authorization Services the access token with permissions is "
"called a Requesting Party Token or RPT for short."
msgstr ""

#. type: Plain text
msgid ""
"{project_name} Authorization Services are built on top of well-known "
"standards such as the OAuth2 and User-Managed Access specifications."
msgstr ""

#. type: Plain text
msgid ""
"In addition to the issuance of RPTs, {project_name} Authorization Services "
"also provides a set of RESTful endpoints that allow resources servers to "
"manage their protected resources, scopes, permissions and policies, helping "
"developers to extend or integrate these capabilities into their applications "
"in order to support fine-grained authorization."
msgstr ""
