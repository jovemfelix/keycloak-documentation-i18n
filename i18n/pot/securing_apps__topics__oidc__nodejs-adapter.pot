# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n  \n"
"POT-Creation-Date: 2017-09-20 07:58+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: source/getting_started/topics/secure-jboss-app/install-client-adapter.adoc:34
#: source/server_installation/topics/installation/directory-structure.adoc:21
#: source/securing_apps/topics/overview/supported-platforms.adoc:17
#: source/securing_apps/topics/overview/supported-platforms.adoc:23
#: source/securing_apps/topics/overview/supported-platforms.adoc:34
#: source/securing_apps/topics/overview/supported-platforms.adoc:40
#: source/securing_apps/topics/overview/supported-platforms.adoc:45
#: source/securing_apps/topics/overview/supported-platforms.adoc:50
#: source/securing_apps/topics/overview/supported-platforms.adoc:56
#: source/securing_apps/topics/overview/supported-platforms.adoc:62
#: source/securing_apps/topics/oidc/java/jboss-adapter.adoc:4
#: source/securing_apps/topics/oidc/java/jboss-adapter.adoc:95
#: source/securing_apps/topics/oidc/java/jboss-adapter.adoc:113
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:24
#: source/securing_apps/topics/saml/java/saml-jboss-adapter.adoc:4
#: source/securing_apps/topics/saml/java/jboss-adapter/jboss_adapter_installation.adoc:56
#: source/server_admin/topics/authentication/flows.adoc:50
#: source/server_admin/topics/authentication/kerberos.adoc:128
#: source/server_admin/topics/authentication/password-policies.adoc:31
#: source/server_admin/topics/user-federation/sssd.adoc:58
#: source/server_admin/topics/user-federation/sssd.adoc:112
#: source/server_development/topics/user-storage/configuration.adoc:110
#: source/server_development/topics/user-storage/simple-example.adoc:267
#: source/server_development/topics/user-storage/simple-example.adoc:274
#: source/server_development/topics/user-storage/simple-example.adoc:281
#: source/server_development/topics/admin-rest-api.adoc:41
msgid "ifeval::[{project_community}==true]"
msgstr ""

#. type: Plain text
#: source/getting_started/topics/secure-jboss-app/install-client-adapter.adoc:48
#: source/server_installation/topics/profiles.adoc:123
#: source/securing_apps/topics/oidc/java/jboss-adapter.adoc:9
#: source/securing_apps/topics/oidc/java/jboss-adapter.adoc:70
#: source/securing_apps/topics/oidc/java/jboss-adapter.adoc:88
#: source/securing_apps/topics/oidc/java/jboss-adapter.adoc:101
#: source/securing_apps/topics/oidc/java/jboss-adapter.adoc:119
#: source/securing_apps/topics/oidc/java/fuse/install-feature.adoc:28
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:33
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:44
#: source/securing_apps/topics/saml/java/saml-jboss-adapter.adoc:9
#: source/securing_apps/topics/saml/java/jboss-adapter/jboss_adapter_installation.adoc:17
#: source/securing_apps/topics/saml/java/jboss-adapter/jboss_adapter_installation.adoc:28
#: source/securing_apps/topics/saml/java/jboss-adapter/jboss_adapter_installation.adoc:46
#: source/securing_apps/topics/saml/java/jboss-adapter/jboss_adapter_installation.adoc:62
#: source/server_admin/topics/user-federation/sssd.adoc:64
#: source/server_admin/topics/user-federation/sssd.adoc:75
#: source/server_admin/topics/user-federation/sssd.adoc:124
#: source/server_admin/topics/user-federation/sssd.adoc:132
#: source/upgrading/topics/migrate_themes.adoc:24
msgid "endif::[]"
msgstr ""

#. type: Title ====
#: source/server_installation/topics/installation.adoc:2
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:15
#, no-wrap
msgid "Installation"
msgstr ""

#. type: Title ===
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:2
#, no-wrap
msgid "Node.js Adapter"
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:5
msgid ""
"{project_name} provides a Node.js adapter built on top of https://github.com/"
"senchalabs/connect[Connect] to protect server-side JavaScript apps â€” the "
"goal was to be flexible enough to integrate with frameworks like https://"
"expressjs.com/[Express.js]."
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:10
msgid ""
"ifeval::[{project_community}==true] The library can be downloaded directly "
"from https://www.npmjs.com/package/keycloak-connect[ {project_name} "
"organization] and the source is available at https://github.com/keycloak/"
"keycloak-nodejs-connect[GitHub].  endif::[]"
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:12
msgid ""
"To use the Node.js adapter, first you must create a client for your "
"application in the {project_name} Administration Console. The adapter "
"supports public, confidential, and bearer-only access type. Which one to "
"choose depends on the use-case scenario."
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:14
msgid ""
"Once the client is created click the `Installation` tab, select "
"`{project_name} OIDC JSON` for `Format Option`, and then click `Download`. "
"The downloaded `keycloak.json` file should be at the root folder of your "
"project."
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:18
msgid ""
"Assuming you've already installed https://nodejs.org[Node.js], create a "
"folder for your application:"
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:20
#, no-wrap
msgid "    mkdir myapp && cd myapp\n"
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:22
msgid ""
"Use `npm init` command to create a `package.json` for your application. Now "
"add the {project_name} connect adapter in the dependencies list:"
msgstr ""

#. type: delimited block -
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:30
#, no-wrap
msgid ""
"    \"dependencies\": {\n"
"        \"keycloak-connect\": \"{project_versionNpm}\"\n"
"    }\n"
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:35
#: source/server_admin/topics/user-federation/sssd.adoc:66
#: source/server_admin/topics/user-federation/sssd.adoc:126
msgid "ifeval::[{project_product}==true]"
msgstr ""

#. type: delimited block -
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:41
#, no-wrap
msgid ""
"    \"dependencies\": {\n"
"        \"keycloak-connect\": \"file:keycloak-connect-{project_versionNpm}.tgz\"\n"
"    }\n"
msgstr ""

#. type: Title ====
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:45
#, no-wrap
msgid "Usage"
msgstr ""

#. type: Labeled list
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:46
#, no-wrap
msgid "Instantiate a Keycloak class"
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:51
msgid ""
"The `Keycloak` class provides a central point for configuration and "
"integration with your application.  The simplest creation involves no "
"arguments."
msgstr ""

#. type: delimited block -
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:56
#, no-wrap
msgid ""
"    var session = require('express-session');\n"
"    var Keycloak = require('keycloak-connect');\n"
msgstr ""

#. type: delimited block -
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:59
#, no-wrap
msgid ""
"    var memoryStore = new session.MemoryStore();\n"
"    var keycloak = new Keycloak({ store: memoryStore });\n"
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:65
msgid ""
"By default, this will locate a file named `keycloak.json` alongside the main "
"executable of your application to initialize keycloak-specific settings "
"(public key, realm name, various URLs).  The `keycloak.json` file is "
"obtained from the {project_name} Admin Console."
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:69
msgid ""
"Instantiation with this method results in all of the reasonable defaults "
"being used. As alternative, it's also possible to provide a configuration "
"object, rather than the `keycloak.json` file:"
msgstr ""

#. type: delimited block -
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:79
#, no-wrap
msgid ""
"    let kcConfig = {\n"
"    clientId: 'myclient',\n"
"    bearerOnly: true,\n"
"    serverUrl: 'http://localhost:8080/auth',\n"
"    realm: 'myrealm',\n"
"    realmPublicKey: 'MIIBIjANB...'\n"
"};\n"
msgstr ""

#. type: delimited block -
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:81
#, no-wrap
msgid "let keycloak = new Keycloak({ store: memoryStore }, kcConfig);\n"
msgstr ""

#. type: Labeled list
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:84
#, no-wrap
msgid "Configuring a web session store"
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:90
msgid ""
"If you want to use web sessions to manage server-side state for "
"authentication, you need to initialize the `Keycloak(...)` with at least a "
"`store` parameter, passing in the actual session store that `express-"
"session` is using."
msgstr ""

#. type: delimited block -
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:94
#, no-wrap
msgid ""
"    var session = require('express-session');\n"
"    var memoryStore = new session.MemoryStore();\n"
msgstr ""

#. type: delimited block -
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:96
#, no-wrap
msgid "    var keycloak = new Keycloak({ store: memoryStore });\n"
msgstr ""

#. type: Labeled list
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:97
#, no-wrap
msgid "Passing a custom scope value"
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:100
msgid ""
"By default, the scope value `openid` is passed as a query parameter to "
"{project_name}'s login URL, but you can add an additional custom value:"
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:102
#, no-wrap
msgid "    var keycloak = new Keycloak({ scope: 'offline_access' });\n"
msgstr ""

#. type: Title ====
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:103
#, no-wrap
msgid "Installing Middleware"
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:106
msgid ""
"Once instantiated, install the middleware into your connect-capable app:"
msgstr ""

#. type: delimited block -
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:110
#, no-wrap
msgid "    var app = express();\n"
msgstr ""

#. type: delimited block -
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:112
#, no-wrap
msgid "    app.use( keycloak.middleware() );\n"
msgstr ""

#. type: Title ====
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:114
#, no-wrap
msgid "Protecting Resources"
msgstr ""

#. type: Labeled list
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:116
#, no-wrap
msgid "Simple authentication"
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:120
msgid ""
"To enforce that an user must be authenticated before accessing a resource, "
"simply use a no-argument version of `keycloak.protect()`:"
msgstr ""

#. type: delimited block -
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:124
#, no-wrap
msgid "    app.get( '/complain', keycloak.protect(), complaintHandler );\n"
msgstr ""

#. type: Labeled list
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:126
#, no-wrap
msgid "Role-based authorization"
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:129
msgid "To secure a resource with an application role for the current app:"
msgstr ""

#. type: delimited block -
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:133
#, no-wrap
msgid "    app.get( '/special', keycloak.protect('special'), specialHandler );\n"
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:136
msgid "To secure a resource with an application role for a *different* app:"
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:139
#, no-wrap
msgid "    app.get( '/extra-special', keycloak.protect('other-app:special', extraSpecialHandler );\n"
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:141
msgid "To secure a resource with a realm role:"
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:144
#, no-wrap
msgid "    app.get( '/admin', keycloak.protect( 'realm:admin' ), adminHandler );\n"
msgstr ""

#. type: Labeled list
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:145
#, no-wrap
msgid "Advanced authorization"
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:149
msgid ""
"To secure resources based on parts of the URL itself, assuming a role exists "
"for each section:"
msgstr ""

#. type: delimited block -
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:155
#, no-wrap
msgid ""
"    function protectBySection(token, request) {\n"
"      return token.hasRole( request.params.section );\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:157
#, no-wrap
msgid "    app.get( '/:section/:page', keycloak.protect( protectBySection ), sectionHandler );\n"
msgstr ""

#. type: Title ====
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:159
#, no-wrap
msgid "Additional URLs"
msgstr ""

#. type: Labeled list
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:161
#, no-wrap
msgid "Explicit user-triggered logout"
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:166
msgid ""
"By default, the middleware catches calls to `/logout` to send the user "
"through a {project_name}-centric logout workflow. This can be changed by "
"specifying a `logout` configuration parameter to the `middleware()` call:"
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:168
#, no-wrap
msgid "    app.use( keycloak.middleware( { logout: '/logoff' } ));\n"
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:170
msgid "{project_name} Admin Callbacks::"
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:175
msgid ""
"Also, the middleware supports callbacks from the {project_name} console to "
"log out a single session or all sessions.  By default, these type of admin "
"callbacks occur relative to the root URL of `/` but can be changed by "
"providing an `admin` parameter to the `middleware()` call:"
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:176
#, no-wrap
msgid "    app.use( keycloak.middleware( { admin: '/callbacks' } );\n"
msgstr ""
