# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n  \n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
msgid ""
"Follow the steps in <<_providers,Service Provider Interfaces>> for more "
"details on how to create and deploy a custom provider."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Locale Selector"
msgstr ""

#. type: Plain text
msgid ""
"By default, the locale is selected using the `DefaultLocaleSelectorProvider` "
"which implements the `LocaleSelectorProvider` interface. English is the "
"default language when internationalization is disabled. With "
"internationalization enabled, the locale is resolved in the following "
"priority:"
msgstr ""

#. type: Plain text
msgid "`kc_locale` query parameter"
msgstr ""

#. type: Plain text
msgid "`KEYCLOAK_LOCALE` cookie value"
msgstr ""

#. type: Plain text
msgid "User's preferred locale if a user instance is available"
msgstr ""

#. type: Plain text
msgid "`ui_locales` query parameter"
msgstr ""

#. type: Plain text
msgid "`Accept-Language` request header"
msgstr ""

#. type: Plain text
msgid "Realm's default language"
msgstr ""

#. type: Plain text
msgid ""
"This behaviour can be changed through the `LocaleSelectorSPI` by "
"implementing the `LocaleSelectorProvider` and "
"`LocaleSelectorProviderFactory`."
msgstr ""

#. type: Plain text
msgid ""
"The `LocaleSelectorProvider` interface has a single method, `resolveLocale`, "
"which must return a locale given a `RealmModel` and a nullable `UserModel`. "
"The actual request is available from the `KeycloakSession#getContext` method."
msgstr ""

#. type: Plain text
msgid ""
"Custom implementations can extend the `DefaultLocaleSelectorProvider` in "
"order to reuse parts of the default behaviour. For example to ignore the "
"`Accept-Language` request header, a custom implementation could extend the "
"default provider, override it's `getAcceptLanguageHeaderLocale`, and return "
"a null value. As a result the locale selection will fall back on the "
"realms's default language."
msgstr ""
