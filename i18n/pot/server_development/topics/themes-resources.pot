# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n  \n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
msgid ""
"Follow the steps in <<_providers,Service Provider Interfaces>> for more "
"details on how to create and deploy a custom provider."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Theme Resources"
msgstr ""

#. type: Plain text
msgid ""
"When implementing custom providers in {project_name} there may often be a "
"need to add additional templates and resources."
msgstr ""

#. type: Plain text
msgid ""
"An example use-case would be a <<_auth_spi,custom authenticator>> that "
"requires additional templates and resources."
msgstr ""

#. type: Plain text
msgid ""
"The easiest way to load additional theme resources is to create a JAR with "
"templates in `theme-resources/templates` and resources in `theme-resources/"
"resources` and drop it into the `standalone/deployments/` directory of "
"{project_name}."
msgstr ""

#. type: Plain text
msgid ""
"If you want a more flexible way to load templates and resources that can be "
"achieved through the ThemeResourceSPI.  By implementing "
"`ThemeResourceProviderFactory` and `ThemeResourceProvider` you can decide "
"exactly how to load templates and resources."
msgstr ""
