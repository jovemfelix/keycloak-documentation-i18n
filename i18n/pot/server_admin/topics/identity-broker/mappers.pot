# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n  \n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title ===
#, no-wrap
msgid "Mapping Claims and Assertions"
msgstr ""

#. type: Plain text
msgid ""
"You can import the SAML and OpenID Connect metadata provided by the external "
"IDP you are authenticating with into the environment of the realm.  This "
"allows you to extract user profile metadata and other information so that "
"you can make it available to your applications."
msgstr ""

#. type: Plain text
msgid ""
"Each new user that logs into your realm via an external identity provider "
"will have an entry for them created in the local {project_name} database, "
"based on the metadata from the SAML or OIDC assertions and claims."
msgstr ""

#. type: Plain text
msgid ""
"If you click on an identity provider listed in the `Identity Providers` page "
"for your realm, you will be brought to the IDPs `Settings` tab.  On this "
"page there is also a `Mappers` tab.  Click on that tab to start mapping your "
"incoming IDP metadata."
msgstr ""

#. type: Plain text
msgid "image:{project_images}/identity-provider-mappers.png[]"
msgstr ""

#. type: Plain text
msgid ""
"There is a `Create` button on this page.  Clicking on this create button "
"allows you to create a broker mapper.  Broker mappers can import SAML "
"attributes or OIDC ID/Access token claims into user attributes and user role "
"mappings."
msgstr ""

#. type: Plain text
msgid "image:{project_images}/identity-provider-mapper.png[]"
msgstr ""

#. type: Plain text
msgid ""
"Select a mapper from the `Mapper Type` list.  Hover over the tooltip to see "
"a description of what the mapper does.  The tooltips also describe what "
"configuration information you need to enter. Click `Save` and your new "
"mapper will be added."
msgstr ""

#. type: Plain text
msgid ""
"The mapper will update user information when the user logs in repeatedly "
"according to the `Sync Mode Override`:"
msgstr ""

#. type: Plain text
msgid ""
"Choose `legacy` to use the behavior in the previous {project_name} version."
msgstr ""

#. type: Plain text
msgid ""
"Choose `import` to import only data from when the user was first created in "
"{project_name} during the first login to {project_name} with a particular "
"identity provider."
msgstr ""

#. type: Plain text
msgid "Choose `force` to update user data at each user login."
msgstr ""

#. type: Plain text
msgid ""
"Choose `inherit` to use the sync mode configured in the identity provider, "
"all other options will override this sync mode."
msgstr ""

#. type: Plain text
msgid ""
"For JSON based claims, you can use dot notation for nesting and square "
"brackets to access array fields by index.  For example 'contact.address[0]."
"country'."
msgstr ""

#. type: Plain text
msgid ""
"To investigate the structure of user profile JSON data provided by social "
"providers you can enable the `DEBUG` level logger `org.keycloak.social."
"user_profile_dump`.  This is done in the server's app-server configuration "
"file (domain.xml or standalone.xml)."
msgstr ""
