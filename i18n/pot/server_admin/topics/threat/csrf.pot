# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n  \n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title ===
#, no-wrap
msgid "CSRF attacks"
msgstr ""

#. type: Plain text
msgid ""
"A Cross-site request forgery (CSRF) attack uses HTTP requests from users "
"that websites have already authenticated. Any site using cookie-based "
"authentication is vulnerable to CSRF attacks. You can mitigate these attacks "
"by matching a state cookie against a posted form or query parameter."
msgstr ""

#. type: Plain text
msgid ""
"The OAuth 2.0 login specification requires that a state cookie matches "
"against a transmitted state parameter. {project_name} fully implements this "
"part of the specification, so all logins are protected."
msgstr ""

#. type: Plain text
msgid ""
"The {project_name} Admin Console is a JavaScript/HTML5 application that "
"makes REST calls to the backend {project_name} admin REST API. These calls "
"all require bearer token authentication and consist of JavaScript Ajax "
"calls, so CSRF is impossible. You can configure the admin REST API to "
"validate the CORS origins."
msgstr ""

#. type: Plain text
msgid ""
"The user account management section in {project_name} can be vulnerable to "
"CSRF. To prevent CSRF attacks, {project_name} sets a state cookie and embeds "
"the value of this cookie in hidden form fields or query parameters within "
"action links. {project_name} checks the query/form parameter against the "
"state cookie to verify that the user makes the call."
msgstr ""
