# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n  \n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title ===
#, no-wrap
msgid "Compromised access and refresh tokens"
msgstr ""

#. type: Plain text
msgid ""
"{project_name} includes several actions to prevent malicious actors from "
"stealing access tokens and refresh tokens. The crucial action is to enforce "
"SSL/HTTPS communication between {project_name} and its clients and "
"applications. {project_name} does not enable SSL by default."
msgstr ""

#. type: Plain text
msgid ""
"Another action to mitigate damage from leaked access tokens is to shorten "
"the token's lifespans. You can specify token lifespans within the "
"<<_timeouts, timeouts page>>. Short lifespans for access tokens force "
"clients and applications to refresh their access tokens after a short time. "
"If an admin detects a leak, the admin can log out all user sessions to "
"invalidate these refresh tokens or set up a revocation policy."
msgstr ""

#. type: Plain text
msgid ""
"Ensure refresh tokens always stay private to the client and are never "
"transmitted."
msgstr ""

#. type: Plain text
msgid ""
"You can mitigate damage from leaked access tokens and refresh tokens by "
"issuing these tokens as holder-of-key tokens. See <<_mtls-client-certificate-"
"bound-tokens, OAuth 2.0 Mutual TLS Client Certificate Bound Access Token>> "
"for more information."
msgstr ""

#. type: Plain text
msgid ""
"If an access token or refresh token is compromised, access the Admin Console "
"and push a not-before revocation policy to all applications. Pushing a not-"
"before policy ensures that any tokens issued before that time become "
"invalid.  Pushing a new not-before policy ensures that applications must "
"download new public keys from {project_name} and mitigate damage from a "
"compromised realm signing key. See the <<realm_keys, keys chapter>> for more "
"information."
msgstr ""

#. type: Plain text
msgid ""
"You can disable specific applications, clients, or users if they are "
"compromised."
msgstr ""
