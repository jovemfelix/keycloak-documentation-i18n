# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n  \n"
"POT-Creation-Date: 2017-09-20 08:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: source/server_development/topics/events.adoc:8
#: source/server_development/topics/user-federation-mapper.adoc:15
#: source/server_development/topics/user-federation.adoc:15
#, no-wrap
msgid "For details on how to package and deploy a custom provider refer to the <<providers.adoc#providers,Service Provider Interfaces>> chapter.\n"
msgstr ""

#. type: Title ==
#: source/server_development/topics/user-federation-mapper.adoc:2
#, no-wrap
msgid "User Federation Mapper SPI"
msgstr ""

#. type: Title ===
#: source/server_development/topics/user-federation-mapper.adoc:4
#, no-wrap
msgid "LDAP Mapper"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-federation-mapper.adoc:8
#, no-wrap
msgid ""
"For the more advanced usecases, you have the possibility to create your own implementation of LDAP mapper or just subclass from some already existing mapper\n"
"implementation. You will need to implement `UserFederationMapperFactory` interface.\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-federation-mapper.adoc:11
#, no-wrap
msgid ""
"In most cases, instead of creating `UserFederationMapperFactory` from scratch, you can create subclasses of `AbstractLDAPFederationMapperFactory`, which itself\n"
"implements `UserFederationMapperFactory`.\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-federation-mapper.adoc:14
#, no-wrap
msgid ""
"Then you need to create mapper implementation, which will be subclass of `AbstractLDAPFederationMapper` (this mapper implementation will be returned by\n"
"`YourAbstractLDAPFederationMapperFactorySubclass.createMapper` method).\n"
msgstr ""
