# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n  \n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
msgid "For example:"
msgstr ""

#. type: Title =====
#, no-wrap
msgid "Securing an Apache Camel Application"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "    <bean id=\"helloProcessor\" class=\"org.keycloak.example.CamelHelloProcessor\" />\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "</blueprint>\n"
msgstr ""

#. type: Plain text
msgid ""
"The `Import-Package` in `META-INF/MANIFEST.MF` needs to contain these "
"imports:"
msgstr ""

#. type: Title =====
#, no-wrap
msgid "Camel RestDSL"
msgstr ""

#. type: Plain text
msgid ""
"Camel RestDSL is a Camel feature used to define your REST endpoints in a "
"fluent way. But you must still use specific implementation classes and "
"provide instructions on how to integrate with {project_name}."
msgstr ""

#. type: Plain text
msgid ""
"The way to configure the integration mechanism depends on the Camel "
"component for which you configure your RestDSL-defined routes."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"<camelContext id=\"blueprintContext\"\n"
"              trace=\"false\"\n"
"              xmlns=\"http://camel.apache.org/schema/blueprint\">\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "    </rest>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    <route id=\"justDirect\">\n"
"        <from uri=\"direct:justDirect\"/>\n"
"        <process ref=\"helloProcessor\" />\n"
"        <log message=\"RestDSL correctly invoked ${body}\"/>\n"
"        <setBody>\n"
"            <constant>(__This second sentence is returned from a Camel RestDSL endpoint__)</constant>\n"
"        </setBody>\n"
"    </route>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "</camelContext>\n"
msgstr ""

#. type: Plain text
msgid ""
"You can secure Apache Camel endpoints implemented with the http://camel."
"apache.org/undertow.html[camel-undertow] component by injecting the proper "
"security constraints via blueprint and updating the used component to "
"`undertow-keycloak`. You have to add the `OSGI-INF/blueprint/blueprint.xml` "
"file to your Camel application with a similar configuration as below. The "
"roles and security constraint mappings, and adapter configuration might "
"differ slightly depending on your environment and needs."
msgstr ""

#. type: Plain text
msgid ""
"Compared to the standard `undertow` component, `undertow-keycloak` component "
"adds two new properties:"
msgstr ""

#. type: Plain text
msgid ""
"`configResolver` is a bean that supplies {project_name} configuration file "
"to:"
msgstr ""

#. type: Plain text
msgid ""
"`org.keycloak.adapters.osgi.BundleBasedKeycloakConfigResolver`: the "
"{project_name} adapter configuration will be looked up inside the bundle and "
"should be stored in `WEB-INF/keycloak.json` file."
msgstr ""

#. type: Plain text
msgid ""
"`org.keycloak.adapters.osgi.PathBasedKeycloakConfigResolver`: the "
"{project_name} adapter configuration will be looked up as described in "
"<<_fuse7_config_external_adapter,External adapter configuration>>."
msgstr ""

#. type: Plain text
msgid ""
"`allowedRoles` is a comma-separated list of roles. User accessing the "
"service has to have at least one role to be permitted the access."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<blueprint xmlns=\"http://www.osgi.org/xmlns/blueprint/v1.0.0\"\n"
"           xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"           xmlns:camel=\"http://camel.apache.org/schema/blueprint\"\n"
"           xsi:schemaLocation=\"\n"
"       http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd\n"
"       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint-2.17.1.xsd\">\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    <bean id=\"keycloakConfigResolver\" class=\"org.keycloak.adapters.osgi.BundleBasedKeycloakConfigResolver\" >\n"
"        <property name=\"bundleContext\" ref=\"blueprintBundleContext\" />\n"
"    </bean>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    <camelContext id=\"blueprintContext\"\n"
"                  trace=\"false\"\n"
"                  xmlns=\"http://camel.apache.org/schema/blueprint\">\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"        <route id=\"httpBridge\">\n"
"            <from uri=\"undertow-keycloak:http://0.0.0.0:8383/admin-camel-endpoint?matchOnUriPrefix=true&amp;configResolver=#keycloakConfigResolver&amp;allowedRoles=admin\" />\n"
"            <process ref=\"helloProcessor\" />\n"
"            <log message=\"The message from camel endpoint contains ${body}\"/>\n"
"        </route>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "    </camelContext>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"javax.servlet;version=\"[3,4)\",\n"
"javax.servlet.http;version=\"[3,4)\",\n"
"javax.net.ssl,\n"
"org.apache.camel.*,\n"
"org.apache.camel;version=\"[2.13,3)\",\n"
"io.undertow.*,\n"
"org.keycloak.*;version=\"{project_versionMvn}\",\n"
"org.osgi.service.blueprint,\n"
"org.osgi.service.blueprint.container\n"
msgstr ""

#. type: Plain text
msgid ""
"The following example shows how to configure integration using the `undertow-"
"keycloak` component, with references to some of the beans defined in "
"previous Blueprint example."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    <!--the link with Keycloak security handlers happens by using undertow-keycloak component -->\n"
"    <restConfiguration apiComponent=\"undertow-keycloak\" contextPath=\"/restdsl\" port=\"8484\">\n"
"        <endpointProperty key=\"configResolver\" value=\"#keycloakConfigResolver\" />\n"
"        <endpointProperty key=\"allowedRoles\" value=\"admin,superadmin\" />\n"
"    </restConfiguration>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    <rest path=\"/hello\" >\n"
"        <description>Hello rest service</description>\n"
"        <get uri=\"/{id}\" outType=\"java.lang.String\">\n"
"            <description>Just a hello</description>\n"
"            <to uri=\"direct:justDirect\" />\n"
"        </get>\n"
msgstr ""
