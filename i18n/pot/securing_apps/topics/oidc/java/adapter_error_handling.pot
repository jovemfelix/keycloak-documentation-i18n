# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n  \n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title ====
#, no-wrap
msgid "Error Handling"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"<error-page>\n"
"    <error-code>403</error-code>\n"
"    <location>/ErrorHandler</location>\n"
"</error-page>\n"
msgstr ""

#. type: Plain text
msgid "For example:"
msgstr ""

#. type: Plain text
msgid ""
"{project_name} has some error handling facilities for servlet based client "
"adapters.  When an error is encountered in authentication, {project_name} "
"will call `HttpServletResponse.sendError()`.  You can set up an error-page "
"within your `web.xml` file to handle the error however you want.  "
"{project_name} can throw 400, 401, 403, and 500 errors."
msgstr ""

#. type: Plain text
msgid ""
"{project_name} also sets a `HttpServletRequest` attribute that you can "
"retrieve.  The attribute name is `org.keycloak.adapters.spi."
"AuthenticationError`, which should be casted to `org.keycloak.adapters."
"OIDCAuthenticationError`."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"import org.keycloak.adapters.OIDCAuthenticationError;\n"
"import org.keycloak.adapters.OIDCAuthenticationError.Reason;\n"
"...\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"OIDCAuthenticationError error = (OIDCAuthenticationError) httpServletRequest\n"
"    .getAttribute('org.keycloak.adapters.spi.AuthenticationError');\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"Reason reason = error.getReason();\n"
"System.out.println(reason.name());\n"
msgstr ""
