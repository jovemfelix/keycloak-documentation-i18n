# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n  \n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title ====
#, no-wrap
msgid "Application Clustering"
msgstr ""

#. type: Plain text
msgid ""
"This chapter is related to supporting clustered applications deployed to "
"JBoss EAP, WildFly and JBoss AS."
msgstr ""

#. type: Plain text
msgid ""
"This chapter is related to supporting clustered applications deployed to "
"JBoss EAP."
msgstr ""

#. type: Plain text
msgid ""
"There are a few options available depending on whether your application is:"
msgstr ""

#. type: Plain text
msgid "Stateless or stateful"
msgstr ""

#. type: Plain text
msgid "Distributable (replicated http session) or non-distributable"
msgstr ""

#. type: Plain text
msgid "Relying on sticky sessions provided by load balancer"
msgstr ""

#. type: Plain text
msgid "Hosted on same domain as {project_name}"
msgstr ""

#. type: Plain text
msgid ""
"Dealing with clustering is not quite as simple as for a regular application. "
"Mainly due to the fact that both the browser and the server-side application "
"sends requests to {project_name}, so it's not as simple as enabling sticky "
"sessions on your load balancer."
msgstr ""

#. type: Title =====
#, no-wrap
msgid "Stateless token store"
msgstr ""

#. type: Plain text
msgid ""
"By default, the web application secured by {project_name} uses the HTTP "
"session to store security context. This means that you either have to enable "
"sticky sessions or replicate the HTTP session."
msgstr ""

#. type: Plain text
msgid ""
"As an alternative to storing the security context in the HTTP session the "
"adapter can be configured to store this in a cookie instead. This is useful "
"if you want to make your application stateless or if you don't want to store "
"the security context in the HTTP session."
msgstr ""

#. type: Plain text
msgid ""
"To use the cookie store for saving the security context, edit your "
"applications `WEB-INF/keycloak.json` and add:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "\"token-store\": \"cookie\"\n"
msgstr ""

#. type: Plain text
msgid ""
"The default value for `token-store` is `session`, which stores the security "
"context in the HTTP session."
msgstr ""

#. type: Plain text
msgid ""
"One limitation of using the cookie store is that the whole security context "
"is passed in the cookie for every HTTP request. This may impact performance."
msgstr ""

#. type: Plain text
msgid ""
"Another small limitation is limited support for Single-Sign Out. It works "
"without issues if you init servlet logout (HttpServletRequest.logout) from "
"the application itself as the adapter will delete the KEYCLOAK_ADAPTER_STATE "
"cookie. However, back-channel logout initialized from a different "
"application isn't propagated by {project_name} to applications using cookie "
"store. Hence it's recommended to use a short value for the access token "
"timeout (for example 1 minute)."
msgstr ""

#. type: Title =====
#, no-wrap
msgid "Relative URI optimization"
msgstr ""

#. type: Plain text
msgid ""
"In deployment scenarios where {project_name} and the application is hosted "
"on the same domain (through a reverse proxy or load balancer) it can be "
"convenient to use relative URI options in your client configuration."
msgstr ""

#. type: Plain text
msgid ""
"With relative URIs the URI is resolved as relative to the URL used to access "
"{project_name}."
msgstr ""

#. type: Plain text
msgid ""
"For example if the URL to your application is `$$https://acme.org/myapp$$` "
"and the URL to {project_name} is `$$https://acme.org/auth$$`, then you can "
"use the redirect-uri `/myapp` instead of `$$https://acme.org/myapp$$`."
msgstr ""

#. type: Title =====
#, no-wrap
msgid "Admin URL configuration"
msgstr ""

#. type: Plain text
msgid ""
"Admin URL for a particular client can be configured in the {project_name} "
"Administration Console.  It's used by the {project_name} server to send "
"backend requests to the application for various tasks, like logout users or "
"push revocation policies."
msgstr ""

#. type: Plain text
msgid "For example the way backchannel logout works is:"
msgstr ""

#. type: Plain text
msgid "User sends logout request from one application"
msgstr ""

#. type: Plain text
msgid "The application sends logout request to {project_name}"
msgstr ""

#. type: Plain text
msgid "The {project_name} server invalidates the user session"
msgstr ""

#. type: Plain text
msgid ""
"The {project_name} server then sends a backchannel request to application "
"with an admin url that are associated with the session"
msgstr ""

#. type: Plain text
msgid ""
"When an application receives the logout request it invalidates the "
"corresponding HTTP session"
msgstr ""

#. type: Plain text
msgid ""
"If admin URL contains `${application.session.host}` it will be replaced with "
"the URL to the node associated with the HTTP session."
msgstr ""

#. type: Title =====
#, no-wrap
msgid "Registration of application nodes"
msgstr ""

#. type: Plain text
msgid ""
"The previous section describes how {project_name} can send logout request to "
"node associated with a specific HTTP session.  However, in some cases admin "
"may want to propagate admin tasks to all registered cluster nodes, not just "
"one of them.  For example to push a new not before policy to the application "
"or to logout all users from the application."
msgstr ""

#. type: Plain text
msgid ""
"In this case {project_name} needs to be aware of all application cluster "
"nodes, so it can send the event to all of them.  To achieve this, we support "
"auto-discovery mechanism:"
msgstr ""

#. type: Plain text
msgid ""
"When a new application node joins the cluster, it sends a registration "
"request to the {project_name} server"
msgstr ""

#. type: Plain text
msgid ""
"The request may be re-sent to {project_name} in configured periodic intervals"
msgstr ""

#. type: Plain text
msgid ""
"If the {project_name} server doesn't receive a re-registration request "
"within a specified timeout then it automatically unregisters the specific "
"node"
msgstr ""

#. type: Plain text
msgid ""
"The node is also unregistered in {project_name} when it sends an "
"unregistration request, which is usually during node shutdown or application "
"undeployment.  This may not work properly for forced shutdown when "
"undeployment listeners are not invoked, which results in the need for "
"automatic unregistration"
msgstr ""

#. type: Plain text
msgid ""
"Sending startup registrations and periodic re-registration is disabled by "
"default as it's only required for some clustered applications."
msgstr ""

#. type: Plain text
msgid ""
"To enable the feature edit the `WEB-INF/keycloak.json` file for your "
"application and add:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"\"register-node-at-startup\": true,\n"
"\"register-node-period\": 600,\n"
msgstr ""

#. type: Plain text
msgid ""
"This means the adapter will send the registration request on startup and re-"
"register every 10 minutes."
msgstr ""

#. type: Plain text
msgid ""
"In the {project_name} Administration Console you can specify the maximum "
"node re-registration timeout (should be larger than _register-node-period_ "
"from the adapter configuration). You can also manually add and remove "
"cluster nodes in through the Adminstration Console, which is useful if you "
"don't want to rely on the automatic registration feature or if you want to "
"remove stale application nodes in the event your not using the automatic "
"unregistration feature."
msgstr ""

#. type: Title =====
#, no-wrap
msgid "Refresh token in each request"
msgstr ""

#. type: Plain text
msgid ""
"By default the application adapter will only refresh the access token when "
"it's expired. However, you can also configure the adapter to refresh the "
"token on every request. This may have a performance impact as your "
"application will send more requests to the {project_name} server."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "\"always-refresh-token\": true\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"This may have a significant impact on performance. Only enable this feature if you can't rely on backchannel messages to propagate logout and not before\n"
"    policies. Another thing to consider is that by default access tokens has a short expiration so even if logout is not propagated the token will expire within\n"
"    minutes of the logout.\n"
msgstr ""
