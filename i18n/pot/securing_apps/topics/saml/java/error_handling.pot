# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n  \n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title ====
#, no-wrap
msgid "Error Handling"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"<error-page>\n"
"    <error-code>403</error-code>\n"
"    <location>/ErrorHandler</location>\n"
"</error-page>\n"
msgstr ""

#. type: Plain text
msgid ""
"{project_name} has some error handling facilities for servlet based client "
"adapters.  When an error is encountered in authentication, the client "
"adapter will call `HttpServletResponse.sendError()`.  You can set up an "
"`error-page` within your `web.xml` file to handle the error however you "
"want.  The client adapter can throw 400, 401, 403, and 500 errors."
msgstr ""

#. type: Plain text
msgid ""
"The client adapter also sets an `HttpServletRequest` attribute that you can "
"retrieve.  The attribute name is `org.keycloak.adapters.spi."
"AuthenticationError`.  Typecast this object to: `org.keycloak.adapters.saml."
"SamlAuthenticationError`.  This class can tell you exactly what happened.  "
"If this attribute is not set, then the adapter was not responsible for the "
"error code."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"public class SamlAuthenticationError implements AuthenticationError {\n"
"    public static enum Reason {\n"
"        EXTRACTION_FAILURE,\n"
"        INVALID_SIGNATURE,\n"
"        ERROR_STATUS\n"
"    }\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"    public Reason getReason() {\n"
"        return reason;\n"
"    }\n"
"    public StatusResponseType getStatus() {\n"
"        return status;\n"
"    }\n"
"}\n"
msgstr ""
